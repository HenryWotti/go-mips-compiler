Terminals unused in grammar

    AND
    OR


Grammar

    0 $accept: program $end

    1 program: package_declaration import_declaration list_func_generic func_main

    2 package_declaration: PACKAGE MAIN

    3 import_declaration: ε
    4                   | IMPORT STRING_VAL import_declaration

    5 $@1: ε

    6 func_main: FUNC MAIN $@1 LEFT_PARENTESES RIGHT_PARENTESES block

    7 block: LEFT_BRACE statement_list RIGHT_BRACE

    8 list_func_generic: ε
    9                  | list_func_generic func_generic

   10 $@2: ε

   11 $@3: ε

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 block

   13 argument_list: ε

   14 $@4: ε

   15 argument_list: ID type_spec $@4 comma_expression argument_list

   16 return_statement: RETURN assign_expression

   17 statement_list: statement
   18               | statement_list statement

   19 statement: if_statement
   20          | for_statement
   21          | assign_val SEMI
   22          | val_declaration SEMI
   23          | array_declaration SEMI
   24          | array_assign SEMI
   25          | print_operation SEMI
   26          | scanf_operation SEMI
   27          | string_list
   28          | return_statement SEMI

   29 $@5: ε

   30 $@6: ε

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI

   32 string_list: STRING_VAL
   33            | string_list COMMA STRING_VAL

   34 val_declaration: VAR ID type_spec

   35 $@7: ε

   36 assign_val: ID $@7 ASSIGN assign_expression

   37 @8: ε

   38 array_printable: ID @8 LEFT_BRACKET id_int_compression RIGHT_BRACKET

   39 @9: ε

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL @9 RIGHT_BRACKET type_spec

   41 $@10: ε

   42 array_assign: ID $@10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

   43 id_int_compression: ID
   44                   | INT_VAL

   45 assign_expression: STRING_VAL
   46                  | id_number_compression
   47                  | operator_expression
   48                  | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   49                  | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   50 $@11: ε

   51 $@12: ε

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES

   53 argument_list_call: ε

   54 $@13: ε

   55 argument_list_call: ID $@13 comma_expression argument_list_call

   56 $@14: ε

   57 argument_list_call: argument_val $@14 comma_expression argument_list_call

   58 argument_val: STRING_VAL
   59             | BOOL_VAL
   60             | INT_VAL
   61             | FLOAT_VAL

   62 comma_expression: ε
   63                 | COMMA

   64 operator_expression: id_number_compression operators id_number_compression
   65                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   66                    | id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   67                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   68                    | id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   73 id_number_compression: ID
   74                      | number_val_spec
   75                      | BOOL_VAL

   76 if_statement: IF if_expression block
   77             | IF if_expression block ELSE block

   78 if_expression: ID
   79              | BOOL_VAL
   80              | id_number_compression comparadors id_number_compression
   81              | operator_expression comparadors id_number_compression

   82 $@15: ε

   83 @16: ε

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update block

   85 $@17: ε

   86 for_comparison: ID $@17 comparadors id_number_compression

   87 $@18: ε

   88 for_update: ID $@18 PLUS_PLUS

   89 $@19: ε

   90 for_update: ID $@19 MINUS_MINUS

   91 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES

   92 print_args: STRING_VAL
   93           | id_number_compression
   94           | array_printable
   95           | FORMAT_STRING COMMA ID
   96           | FORMAT_INT COMMA ID
   97           | FORMAT_FLOAT COMMA ID
   98           | FORMAT_BOOL COMMA ID
   99           | print_args COMMA FORMAT_STRING COMMA ID
  100           | print_args COMMA FORMAT_INT COMMA ID
  101           | print_args COMMA FORMAT_FLOAT COMMA ID
  102           | print_args COMMA FORMAT_BOOL COMMA ID

  103 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES

  104 scan_args: FORMAT_STRING COMMA ADDRESS ID
  105          | FORMAT_INT COMMA ADDRESS ID
  106          | FORMAT_FLOAT COMMA ADDRESS ID
  107          | FORMAT_BOOL COMMA ADDRESS ID
  108          | scan_args COMMA FORMAT_STRING COMMA ADDRESS ID
  109          | scan_args COMMA FORMAT_INT COMMA ADDRESS ID
  110          | scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID
  111          | scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID

  112 type_spec: INT_TYPE
  113          | STRING_TYPE
  114          | FLOAT_TYPE
  115          | BOOL_TYPE
  116          | VOID_TYPE

  117 number_val_spec: INT_VAL
  118                | FLOAT_VAL

  119 comparadors: LESS
  120            | MORE
  121            | LESS_EQUAL
  122            | MORE_EQUAL
  123            | DIFERS
  124            | NOT
  125            | EQUALS

  126 operators: PLUS
  127          | MINUS
  128          | TIMES
  129          | OVER
  130          | REST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FLOAT_TYPE_CAST (258) 49 67 68 69 70 72
    INT_TYPE_CAST (259) 48 65 66 69 70 71
    STRING_VAL (260) 4 32 33 45 58 92
    ELSE (261) 77
    FOR (262) 84
    FUNC (263) 6 12
    IF (264) 76 77
    PACKAGE (265) 2
    IMPORT (266) 4
    RETURN (267) 16
    VAR (268) 34 40
    INT_TYPE (269) 112
    FLOAT_TYPE (270) 114
    STRING_TYPE (271) 113
    VOID_TYPE (272) 116
    BOOL_TYPE (273) 115
    PLUS_PLUS (274) 88
    PLUS (275) 126
    MINUS_MINUS (276) 90
    MINUS (277) 127
    TIMES (278) 128
    OVER (279) 129
    REST (280) 130
    AND (281)
    OR (282)
    EQUALS (283) 125
    LESS_EQUAL (284) 121
    MORE_EQUAL (285) 122
    LESS (286) 119
    MORE (287) 120
    DIFERS (288) 123
    NOT (289) 124
    LEFT_PARENTESES (290) 6 12 31 52 91 103
    RIGHT_PARENTESES (291) 6 12 31 48 49 52 65 66 67 68 69 70 71 72 91 103
    LEFT_BRACKET (292) 38 40 42
    RIGHT_BRACKET (293) 38 40 42
    LEFT_BRACE (294) 7
    RIGHT_BRACE (295) 7
    FLOAT_VAL (296) 61 118
    INT_VAL (297) 40 44 60 84 117
    BOOL_VAL (298) 59 75 79
    ID (299) 12 15 31 34 36 38 40 42 43 52 55 73 78 84 86 88 90 95 96 97 98 99 100 101 102 104 105 106 107 108 109 110 111
    SHORT_ASSIGN (300) 84
    ASSIGN (301) 36 42
    SEMI (302) 21 22 23 24 25 26 28 31 84
    ADDRESS (303) 104 105 106 107 108 109 110 111
    COMMA (304) 33 63 95 96 97 98 99 100 101 102 104 105 106 107 108 109 110 111
    MAIN (305) 2 6
    PRINTLN (306) 91
    SCANF (307) 103
    FORMAT_STRING (308) 95 99 104 108
    FORMAT_INT (309) 96 100 105 109
    FORMAT_FLOAT (310) 97 101 106 110
    FORMAT_BOOL (311) 98 102 107 111
    IFX (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 1
        on right: 0
    package_declaration (60)
        on left: 2
        on right: 1
    import_declaration (61)
        on left: 3 4
        on right: 1 4
    func_main (62)
        on left: 6
        on right: 1
    $@1 (63)
        on left: 5
        on right: 6
    block (64)
        on left: 7
        on right: 6 12 76 77 84
    list_func_generic (65)
        on left: 8 9
        on right: 1 9
    func_generic (66)
        on left: 12
        on right: 9
    $@2 (67)
        on left: 10
        on right: 12
    $@3 (68)
        on left: 11
        on right: 12
    argument_list (69)
        on left: 13 15
        on right: 12 15
    $@4 (70)
        on left: 14
        on right: 15
    return_statement (71)
        on left: 16
        on right: 28
    statement_list (72)
        on left: 17 18
        on right: 7 18
    statement (73)
        on left: 19 20 21 22 23 24 25 26 27 28 31
        on right: 17 18
    $@5 (74)
        on left: 29
        on right: 31
    $@6 (75)
        on left: 30
        on right: 31
    string_list (76)
        on left: 32 33
        on right: 27 33
    val_declaration (77)
        on left: 34
        on right: 22
    assign_val (78)
        on left: 36
        on right: 21
    $@7 (79)
        on left: 35
        on right: 36
    array_printable (80)
        on left: 38
        on right: 94
    @8 (81)
        on left: 37
        on right: 38
    array_declaration (82)
        on left: 40
        on right: 23
    @9 (83)
        on left: 39
        on right: 40
    array_assign (84)
        on left: 42
        on right: 24
    $@10 (85)
        on left: 41
        on right: 42
    id_int_compression (86)
        on left: 43 44
        on right: 38 42
    assign_expression (87)
        on left: 45 46 47 48 49 52
        on right: 16 36 42
    $@11 (88)
        on left: 50
        on right: 52
    $@12 (89)
        on left: 51
        on right: 52
    argument_list_call (90)
        on left: 53 55 57
        on right: 31 52 55 57
    $@13 (91)
        on left: 54
        on right: 55
    $@14 (92)
        on left: 56
        on right: 57
    argument_val (93)
        on left: 58 59 60 61
        on right: 57
    comma_expression (94)
        on left: 62 63
        on right: 15 55 57
    operator_expression (95)
        on left: 64 65 66 67 68 69 70 71 72
        on right: 47 81
    id_number_compression (96)
        on left: 73 74 75
        on right: 46 48 49 64 65 66 67 68 69 70 71 72 80 81 86 93
    if_statement (97)
        on left: 76 77
        on right: 19
    if_expression (98)
        on left: 78 79 80 81
        on right: 76 77
    for_statement (99)
        on left: 84
        on right: 20
    $@15 (100)
        on left: 82
        on right: 84
    @16 (101)
        on left: 83
        on right: 84
    for_comparison (102)
        on left: 86
        on right: 84
    $@17 (103)
        on left: 85
        on right: 86
    for_update (104)
        on left: 88 90
        on right: 84
    $@18 (105)
        on left: 87
        on right: 88
    $@19 (106)
        on left: 89
        on right: 90
    print_operation (107)
        on left: 91
        on right: 25
    print_args (108)
        on left: 92 93 94 95 96 97 98 99 100 101 102
        on right: 91 99 100 101 102
    scanf_operation (109)
        on left: 103
        on right: 26
    scan_args (110)
        on left: 104 105 106 107 108 109 110 111
        on right: 103 108 109 110 111
    type_spec (111)
        on left: 112 113 114 115 116
        on right: 12 15 34 40
    number_val_spec (112)
        on left: 117 118
        on right: 74
    comparadors (113)
        on left: 119 120 121 122 123 124 125
        on right: 80 81 86
    operators (114)
        on left: 126 127 128 129 130
        on right: 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: • program $end

    PACKAGE  shift, and go to state 1

    program              go to state 2
    package_declaration  go to state 3


State 1

    2 package_declaration: PACKAGE • MAIN

    MAIN  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: package_declaration • import_declaration list_func_generic func_main

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 7


State 4

    2 package_declaration: PACKAGE MAIN •

    $default  reduce using rule 2 (package_declaration)


State 5

    0 $accept: program $end •

    $default  accept


State 6

    4 import_declaration: IMPORT • STRING_VAL import_declaration

    STRING_VAL  shift, and go to state 8


State 7

    1 program: package_declaration import_declaration • list_func_generic func_main

    $default  reduce using rule 8 (list_func_generic)

    list_func_generic  go to state 9


State 8

    4 import_declaration: IMPORT STRING_VAL • import_declaration

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 10


State 9

    1 program: package_declaration import_declaration list_func_generic • func_main
    9 list_func_generic: list_func_generic • func_generic

    FUNC  shift, and go to state 11

    func_main     go to state 12
    func_generic  go to state 13


State 10

    4 import_declaration: IMPORT STRING_VAL import_declaration •

    $default  reduce using rule 4 (import_declaration)


State 11

    6 func_main: FUNC • MAIN $@1 LEFT_PARENTESES RIGHT_PARENTESES block
   12 func_generic: FUNC • ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 block

    ID    shift, and go to state 14
    MAIN  shift, and go to state 15


State 12

    1 program: package_declaration import_declaration list_func_generic func_main •

    $default  reduce using rule 1 (program)


State 13

    9 list_func_generic: list_func_generic func_generic •

    $default  reduce using rule 9 (list_func_generic)


State 14

   12 func_generic: FUNC ID • $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 block

    $default  reduce using rule 10 ($@2)

    $@2  go to state 16


State 15

    6 func_main: FUNC MAIN • $@1 LEFT_PARENTESES RIGHT_PARENTESES block

    $default  reduce using rule 5 ($@1)

    $@1  go to state 17


State 16

   12 func_generic: FUNC ID $@2 • LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 block

    LEFT_PARENTESES  shift, and go to state 18


State 17

    6 func_main: FUNC MAIN $@1 • LEFT_PARENTESES RIGHT_PARENTESES block

    LEFT_PARENTESES  shift, and go to state 19


State 18

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES • argument_list RIGHT_PARENTESES type_spec $@3 block

    ID  shift, and go to state 20

    $default  reduce using rule 13 (argument_list)

    argument_list  go to state 21


State 19

    6 func_main: FUNC MAIN $@1 LEFT_PARENTESES • RIGHT_PARENTESES block

    RIGHT_PARENTESES  shift, and go to state 22


State 20

   15 argument_list: ID • type_spec $@4 comma_expression argument_list

    INT_TYPE     shift, and go to state 23
    FLOAT_TYPE   shift, and go to state 24
    STRING_TYPE  shift, and go to state 25
    VOID_TYPE    shift, and go to state 26
    BOOL_TYPE    shift, and go to state 27

    type_spec  go to state 28


State 21

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list • RIGHT_PARENTESES type_spec $@3 block

    RIGHT_PARENTESES  shift, and go to state 29


State 22

    6 func_main: FUNC MAIN $@1 LEFT_PARENTESES RIGHT_PARENTESES • block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 31


State 23

  112 type_spec: INT_TYPE •

    $default  reduce using rule 112 (type_spec)


State 24

  114 type_spec: FLOAT_TYPE •

    $default  reduce using rule 114 (type_spec)


State 25

  113 type_spec: STRING_TYPE •

    $default  reduce using rule 113 (type_spec)


State 26

  116 type_spec: VOID_TYPE •

    $default  reduce using rule 116 (type_spec)


State 27

  115 type_spec: BOOL_TYPE •

    $default  reduce using rule 115 (type_spec)


State 28

   15 argument_list: ID type_spec • $@4 comma_expression argument_list

    $default  reduce using rule 14 ($@4)

    $@4  go to state 32


State 29

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES • type_spec $@3 block

    INT_TYPE     shift, and go to state 23
    FLOAT_TYPE   shift, and go to state 24
    STRING_TYPE  shift, and go to state 25
    VOID_TYPE    shift, and go to state 26
    BOOL_TYPE    shift, and go to state 27

    type_spec  go to state 33


State 30

    7 block: LEFT_BRACE • statement_list RIGHT_BRACE

    STRING_VAL  shift, and go to state 34
    FOR         shift, and go to state 35
    IF          shift, and go to state 36
    RETURN      shift, and go to state 37
    VAR         shift, and go to state 38
    ID          shift, and go to state 39
    PRINTLN     shift, and go to state 40
    SCANF       shift, and go to state 41

    return_statement   go to state 42
    statement_list     go to state 43
    statement          go to state 44
    string_list        go to state 45
    val_declaration    go to state 46
    assign_val         go to state 47
    array_declaration  go to state 48
    array_assign       go to state 49
    if_statement       go to state 50
    for_statement      go to state 51
    print_operation    go to state 52
    scanf_operation    go to state 53


State 31

    6 func_main: FUNC MAIN $@1 LEFT_PARENTESES RIGHT_PARENTESES block •

    $default  reduce using rule 6 (func_main)


State 32

   15 argument_list: ID type_spec $@4 • comma_expression argument_list

    COMMA  shift, and go to state 54

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 55


State 33

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec • $@3 block

    $default  reduce using rule 11 ($@3)

    $@3  go to state 56


State 34

   32 string_list: STRING_VAL •

    $default  reduce using rule 32 (string_list)


State 35

   84 for_statement: FOR • ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update block

    ID  shift, and go to state 57


State 36

   76 if_statement: IF • if_expression block
   77             | IF • if_expression block ELSE block

    FLOAT_TYPE_CAST  shift, and go to state 58
    INT_TYPE_CAST    shift, and go to state 59
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 62
    ID               shift, and go to state 63

    operator_expression    go to state 64
    id_number_compression  go to state 65
    if_expression          go to state 66
    number_val_spec        go to state 67


State 37

   16 return_statement: RETURN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 70
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    assign_expression      go to state 73
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 38

   34 val_declaration: VAR • ID type_spec
   40 array_declaration: VAR • ID LEFT_BRACKET INT_VAL @9 RIGHT_BRACKET type_spec

    ID  shift, and go to state 76


State 39

   31 statement: ID • $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI
   36 assign_val: ID • $@7 ASSIGN assign_expression
   42 array_assign: ID • $@10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  reduce using rule 41 ($@10)
    ASSIGN        reduce using rule 35 ($@7)
    $default      reduce using rule 29 ($@5)

    $@5   go to state 77
    $@7   go to state 78
    $@10  go to state 79


State 40

   91 print_operation: PRINTLN • LEFT_PARENTESES print_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 80


State 41

  103 scanf_operation: SCANF • LEFT_PARENTESES scan_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 81


State 42

   28 statement: return_statement • SEMI

    SEMI  shift, and go to state 82


State 43

    7 block: LEFT_BRACE statement_list • RIGHT_BRACE
   18 statement_list: statement_list • statement

    STRING_VAL   shift, and go to state 34
    FOR          shift, and go to state 35
    IF           shift, and go to state 36
    RETURN       shift, and go to state 37
    VAR          shift, and go to state 38
    RIGHT_BRACE  shift, and go to state 83
    ID           shift, and go to state 39
    PRINTLN      shift, and go to state 40
    SCANF        shift, and go to state 41

    return_statement   go to state 42
    statement          go to state 84
    string_list        go to state 45
    val_declaration    go to state 46
    assign_val         go to state 47
    array_declaration  go to state 48
    array_assign       go to state 49
    if_statement       go to state 50
    for_statement      go to state 51
    print_operation    go to state 52
    scanf_operation    go to state 53


State 44

   17 statement_list: statement •

    $default  reduce using rule 17 (statement_list)


State 45

   27 statement: string_list •
   33 string_list: string_list • COMMA STRING_VAL

    COMMA  shift, and go to state 85

    $default  reduce using rule 27 (statement)


State 46

   22 statement: val_declaration • SEMI

    SEMI  shift, and go to state 86


State 47

   21 statement: assign_val • SEMI

    SEMI  shift, and go to state 87


State 48

   23 statement: array_declaration • SEMI

    SEMI  shift, and go to state 88


State 49

   24 statement: array_assign • SEMI

    SEMI  shift, and go to state 89


State 50

   19 statement: if_statement •

    $default  reduce using rule 19 (statement)


State 51

   20 statement: for_statement •

    $default  reduce using rule 20 (statement)


State 52

   25 statement: print_operation • SEMI

    SEMI  shift, and go to state 90


State 53

   26 statement: scanf_operation • SEMI

    SEMI  shift, and go to state 91


State 54

   63 comma_expression: COMMA •

    $default  reduce using rule 63 (comma_expression)


State 55

   15 argument_list: ID type_spec $@4 comma_expression • argument_list

    ID  shift, and go to state 20

    $default  reduce using rule 13 (argument_list)

    argument_list  go to state 92


State 56

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 • block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 93


State 57

   84 for_statement: FOR ID • $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update block

    $default  reduce using rule 82 ($@15)

    $@15  go to state 94


State 58

   67 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 96
    number_val_spec        go to state 67


State 59

   65 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 97
    number_val_spec        go to state 67


State 60

  118 number_val_spec: FLOAT_VAL •

    $default  reduce using rule 118 (number_val_spec)


State 61

  117 number_val_spec: INT_VAL •

    $default  reduce using rule 117 (number_val_spec)


State 62

   75 id_number_compression: BOOL_VAL •
   79 if_expression: BOOL_VAL •

    LEFT_BRACE  reduce using rule 79 (if_expression)
    $default    reduce using rule 75 (id_number_compression)


State 63

   73 id_number_compression: ID •
   78 if_expression: ID •

    LEFT_BRACE  reduce using rule 78 (if_expression)
    $default    reduce using rule 73 (id_number_compression)


State 64

   81 if_expression: operator_expression • comparadors id_number_compression

    EQUALS      shift, and go to state 98
    LESS_EQUAL  shift, and go to state 99
    MORE_EQUAL  shift, and go to state 100
    LESS        shift, and go to state 101
    MORE        shift, and go to state 102
    DIFERS      shift, and go to state 103
    NOT         shift, and go to state 104

    comparadors  go to state 105


State 65

   64 operator_expression: id_number_compression • operators id_number_compression
   66                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   80 if_expression: id_number_compression • comparadors id_number_compression

    PLUS        shift, and go to state 106
    MINUS       shift, and go to state 107
    TIMES       shift, and go to state 108
    OVER        shift, and go to state 109
    REST        shift, and go to state 110
    EQUALS      shift, and go to state 98
    LESS_EQUAL  shift, and go to state 99
    MORE_EQUAL  shift, and go to state 100
    LESS        shift, and go to state 101
    MORE        shift, and go to state 102
    DIFERS      shift, and go to state 103
    NOT         shift, and go to state 104

    comparadors  go to state 111
    operators    go to state 112


State 66

   76 if_statement: IF if_expression • block
   77             | IF if_expression • block ELSE block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 113


State 67

   74 id_number_compression: number_val_spec •

    $default  reduce using rule 74 (id_number_compression)


State 68

   49 assign_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   67 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 114
    number_val_spec        go to state 67


State 69

   48 assign_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   65 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 115
    number_val_spec        go to state 67


State 70

   45 assign_expression: STRING_VAL •

    $default  reduce using rule 45 (assign_expression)


State 71

   75 id_number_compression: BOOL_VAL •

    $default  reduce using rule 75 (id_number_compression)


State 72

   52 assign_expression: ID • $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES
   73 id_number_compression: ID •

    LEFT_PARENTESES  reduce using rule 50 ($@11)
    $default         reduce using rule 73 (id_number_compression)

    $@11  go to state 116


State 73

   16 return_statement: RETURN assign_expression •

    $default  reduce using rule 16 (return_statement)


State 74

   47 assign_expression: operator_expression •

    $default  reduce using rule 47 (assign_expression)


State 75

   46 assign_expression: id_number_compression •
   64 operator_expression: id_number_compression • operators id_number_compression
   66                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    TIMES  shift, and go to state 108
    OVER   shift, and go to state 109
    REST   shift, and go to state 110

    $default  reduce using rule 46 (assign_expression)

    operators  go to state 112


State 76

   34 val_declaration: VAR ID • type_spec
   40 array_declaration: VAR ID • LEFT_BRACKET INT_VAL @9 RIGHT_BRACKET type_spec

    INT_TYPE      shift, and go to state 23
    FLOAT_TYPE    shift, and go to state 24
    STRING_TYPE   shift, and go to state 25
    VOID_TYPE     shift, and go to state 26
    BOOL_TYPE     shift, and go to state 27
    LEFT_BRACKET  shift, and go to state 117

    type_spec  go to state 118


State 77

   31 statement: ID $@5 • LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI

    LEFT_PARENTESES  shift, and go to state 119


State 78

   36 assign_val: ID $@7 • ASSIGN assign_expression

    ASSIGN  shift, and go to state 120


State 79

   42 array_assign: ID $@10 • LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  shift, and go to state 121


State 80

   91 print_operation: PRINTLN LEFT_PARENTESES • print_args RIGHT_PARENTESES

    STRING_VAL     shift, and go to state 122
    FLOAT_VAL      shift, and go to state 60
    INT_VAL        shift, and go to state 61
    BOOL_VAL       shift, and go to state 71
    ID             shift, and go to state 123
    FORMAT_STRING  shift, and go to state 124
    FORMAT_INT     shift, and go to state 125
    FORMAT_FLOAT   shift, and go to state 126
    FORMAT_BOOL    shift, and go to state 127

    array_printable        go to state 128
    id_number_compression  go to state 129
    print_args             go to state 130
    number_val_spec        go to state 67


State 81

  103 scanf_operation: SCANF LEFT_PARENTESES • scan_args RIGHT_PARENTESES

    FORMAT_STRING  shift, and go to state 131
    FORMAT_INT     shift, and go to state 132
    FORMAT_FLOAT   shift, and go to state 133
    FORMAT_BOOL    shift, and go to state 134

    scan_args  go to state 135


State 82

   28 statement: return_statement SEMI •

    $default  reduce using rule 28 (statement)


State 83

    7 block: LEFT_BRACE statement_list RIGHT_BRACE •

    $default  reduce using rule 7 (block)


State 84

   18 statement_list: statement_list statement •

    $default  reduce using rule 18 (statement_list)


State 85

   33 string_list: string_list COMMA • STRING_VAL

    STRING_VAL  shift, and go to state 136


State 86

   22 statement: val_declaration SEMI •

    $default  reduce using rule 22 (statement)


State 87

   21 statement: assign_val SEMI •

    $default  reduce using rule 21 (statement)


State 88

   23 statement: array_declaration SEMI •

    $default  reduce using rule 23 (statement)


State 89

   24 statement: array_assign SEMI •

    $default  reduce using rule 24 (statement)


State 90

   25 statement: print_operation SEMI •

    $default  reduce using rule 25 (statement)


State 91

   26 statement: scanf_operation SEMI •

    $default  reduce using rule 26 (statement)


State 92

   15 argument_list: ID type_spec $@4 comma_expression argument_list •

    $default  reduce using rule 15 (argument_list)


State 93

   12 func_generic: FUNC ID $@2 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@3 block •

    $default  reduce using rule 12 (func_generic)


State 94

   84 for_statement: FOR ID $@15 • SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update block

    SHORT_ASSIGN  shift, and go to state 137


State 95

   73 id_number_compression: ID •

    $default  reduce using rule 73 (id_number_compression)


State 96

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 138


State 97

   65 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 139


State 98

  125 comparadors: EQUALS •

    $default  reduce using rule 125 (comparadors)


State 99

  121 comparadors: LESS_EQUAL •

    $default  reduce using rule 121 (comparadors)


State 100

  122 comparadors: MORE_EQUAL •

    $default  reduce using rule 122 (comparadors)


State 101

  119 comparadors: LESS •

    $default  reduce using rule 119 (comparadors)


State 102

  120 comparadors: MORE •

    $default  reduce using rule 120 (comparadors)


State 103

  123 comparadors: DIFERS •

    $default  reduce using rule 123 (comparadors)


State 104

  124 comparadors: NOT •

    $default  reduce using rule 124 (comparadors)


State 105

   81 if_expression: operator_expression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 140
    number_val_spec        go to state 67


State 106

  126 operators: PLUS •

    $default  reduce using rule 126 (operators)


State 107

  127 operators: MINUS •

    $default  reduce using rule 127 (operators)


State 108

  128 operators: TIMES •

    $default  reduce using rule 128 (operators)


State 109

  129 operators: OVER •

    $default  reduce using rule 129 (operators)


State 110

  130 operators: REST •

    $default  reduce using rule 130 (operators)


State 111

   80 if_expression: id_number_compression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 141
    number_val_spec        go to state 67


State 112

   64 operator_expression: id_number_compression operators • id_number_compression
   66                    | id_number_compression operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 142
    INT_TYPE_CAST    shift, and go to state 143
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 95

    id_number_compression  go to state 144
    number_val_spec        go to state 67


State 113

   76 if_statement: IF if_expression block •
   77             | IF if_expression block • ELSE block

    ELSE  shift, and go to state 145

    $default  reduce using rule 76 (if_statement)


State 114

   49 assign_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   67 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 146


State 115

   48 assign_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   65 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 147


State 116

   52 assign_expression: ID $@11 • LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 148


State 117

   40 array_declaration: VAR ID LEFT_BRACKET • INT_VAL @9 RIGHT_BRACKET type_spec

    INT_VAL  shift, and go to state 149


State 118

   34 val_declaration: VAR ID type_spec •

    $default  reduce using rule 34 (val_declaration)


State 119

   31 statement: ID $@5 LEFT_PARENTESES • argument_list_call $@6 RIGHT_PARENTESES SEMI

    STRING_VAL  shift, and go to state 150
    FLOAT_VAL   shift, and go to state 151
    INT_VAL     shift, and go to state 152
    BOOL_VAL    shift, and go to state 153
    ID          shift, and go to state 154

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 155
    argument_val        go to state 156


State 120

   36 assign_val: ID $@7 ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 70
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    assign_expression      go to state 157
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 121

   42 array_assign: ID $@10 LEFT_BRACKET • id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    INT_VAL  shift, and go to state 158
    ID       shift, and go to state 159

    id_int_compression  go to state 160


State 122

   92 print_args: STRING_VAL •

    $default  reduce using rule 92 (print_args)


State 123

   38 array_printable: ID • @8 LEFT_BRACKET id_int_compression RIGHT_BRACKET
   73 id_number_compression: ID •

    LEFT_BRACKET  reduce using rule 37 (@8)
    $default      reduce using rule 73 (id_number_compression)

    @8  go to state 161


State 124

   95 print_args: FORMAT_STRING • COMMA ID

    COMMA  shift, and go to state 162


State 125

   96 print_args: FORMAT_INT • COMMA ID

    COMMA  shift, and go to state 163


State 126

   97 print_args: FORMAT_FLOAT • COMMA ID

    COMMA  shift, and go to state 164


State 127

   98 print_args: FORMAT_BOOL • COMMA ID

    COMMA  shift, and go to state 165


State 128

   94 print_args: array_printable •

    $default  reduce using rule 94 (print_args)


State 129

   93 print_args: id_number_compression •

    $default  reduce using rule 93 (print_args)


State 130

   91 print_operation: PRINTLN LEFT_PARENTESES print_args • RIGHT_PARENTESES
   99 print_args: print_args • COMMA FORMAT_STRING COMMA ID
  100           | print_args • COMMA FORMAT_INT COMMA ID
  101           | print_args • COMMA FORMAT_FLOAT COMMA ID
  102           | print_args • COMMA FORMAT_BOOL COMMA ID

    RIGHT_PARENTESES  shift, and go to state 166
    COMMA             shift, and go to state 167


State 131

  104 scan_args: FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 168


State 132

  105 scan_args: FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 169


State 133

  106 scan_args: FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 170


State 134

  107 scan_args: FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 171


State 135

  103 scanf_operation: SCANF LEFT_PARENTESES scan_args • RIGHT_PARENTESES
  108 scan_args: scan_args • COMMA FORMAT_STRING COMMA ADDRESS ID
  109          | scan_args • COMMA FORMAT_INT COMMA ADDRESS ID
  110          | scan_args • COMMA FORMAT_FLOAT COMMA ADDRESS ID
  111          | scan_args • COMMA FORMAT_BOOL COMMA ADDRESS ID

    RIGHT_PARENTESES  shift, and go to state 172
    COMMA             shift, and go to state 173


State 136

   33 string_list: string_list COMMA STRING_VAL •

    $default  reduce using rule 33 (string_list)


State 137

   84 for_statement: FOR ID $@15 SHORT_ASSIGN • INT_VAL @16 SEMI for_comparison SEMI for_update block

    INT_VAL  shift, and go to state 174


State 138

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    TIMES  shift, and go to state 108
    OVER   shift, and go to state 109
    REST   shift, and go to state 110

    operators  go to state 175


State 139

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    TIMES  shift, and go to state 108
    OVER   shift, and go to state 109
    REST   shift, and go to state 110

    operators  go to state 176


State 140

   81 if_expression: operator_expression comparadors id_number_compression •

    $default  reduce using rule 81 (if_expression)


State 141

   80 if_expression: id_number_compression comparadors id_number_compression •

    $default  reduce using rule 80 (if_expression)


State 142

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 177
    number_val_spec        go to state 67


State 143

   66 operator_expression: id_number_compression operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 178
    number_val_spec        go to state 67


State 144

   64 operator_expression: id_number_compression operators id_number_compression •

    $default  reduce using rule 64 (operator_expression)


State 145

   77 if_statement: IF if_expression block ELSE • block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 179


State 146

   49 assign_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    TIMES  shift, and go to state 108
    OVER   shift, and go to state 109
    REST   shift, and go to state 110

    $default  reduce using rule 49 (assign_expression)

    operators  go to state 175


State 147

   48 assign_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    TIMES  shift, and go to state 108
    OVER   shift, and go to state 109
    REST   shift, and go to state 110

    $default  reduce using rule 48 (assign_expression)

    operators  go to state 176


State 148

   52 assign_expression: ID $@11 LEFT_PARENTESES • argument_list_call $@12 RIGHT_PARENTESES

    STRING_VAL  shift, and go to state 150
    FLOAT_VAL   shift, and go to state 151
    INT_VAL     shift, and go to state 152
    BOOL_VAL    shift, and go to state 153
    ID          shift, and go to state 154

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 180
    argument_val        go to state 156


State 149

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL • @9 RIGHT_BRACKET type_spec

    $default  reduce using rule 39 (@9)

    @9  go to state 181


State 150

   58 argument_val: STRING_VAL •

    $default  reduce using rule 58 (argument_val)


State 151

   61 argument_val: FLOAT_VAL •

    $default  reduce using rule 61 (argument_val)


State 152

   60 argument_val: INT_VAL •

    $default  reduce using rule 60 (argument_val)


State 153

   59 argument_val: BOOL_VAL •

    $default  reduce using rule 59 (argument_val)


State 154

   55 argument_list_call: ID • $@13 comma_expression argument_list_call

    $default  reduce using rule 54 ($@13)

    $@13  go to state 182


State 155

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call • $@6 RIGHT_PARENTESES SEMI

    $default  reduce using rule 30 ($@6)

    $@6  go to state 183


State 156

   57 argument_list_call: argument_val • $@14 comma_expression argument_list_call

    $default  reduce using rule 56 ($@14)

    $@14  go to state 184


State 157

   36 assign_val: ID $@7 ASSIGN assign_expression •

    $default  reduce using rule 36 (assign_val)


State 158

   44 id_int_compression: INT_VAL •

    $default  reduce using rule 44 (id_int_compression)


State 159

   43 id_int_compression: ID •

    $default  reduce using rule 43 (id_int_compression)


State 160

   42 array_assign: ID $@10 LEFT_BRACKET id_int_compression • RIGHT_BRACKET ASSIGN assign_expression

    RIGHT_BRACKET  shift, and go to state 185


State 161

   38 array_printable: ID @8 • LEFT_BRACKET id_int_compression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 186


State 162

   95 print_args: FORMAT_STRING COMMA • ID

    ID  shift, and go to state 187


State 163

   96 print_args: FORMAT_INT COMMA • ID

    ID  shift, and go to state 188


State 164

   97 print_args: FORMAT_FLOAT COMMA • ID

    ID  shift, and go to state 189


State 165

   98 print_args: FORMAT_BOOL COMMA • ID

    ID  shift, and go to state 190


State 166

   91 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES •

    $default  reduce using rule 91 (print_operation)


State 167

   99 print_args: print_args COMMA • FORMAT_STRING COMMA ID
  100           | print_args COMMA • FORMAT_INT COMMA ID
  101           | print_args COMMA • FORMAT_FLOAT COMMA ID
  102           | print_args COMMA • FORMAT_BOOL COMMA ID

    FORMAT_STRING  shift, and go to state 191
    FORMAT_INT     shift, and go to state 192
    FORMAT_FLOAT   shift, and go to state 193
    FORMAT_BOOL    shift, and go to state 194


State 168

  104 scan_args: FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 195


State 169

  105 scan_args: FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 196


State 170

  106 scan_args: FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 197


State 171

  107 scan_args: FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 198


State 172

  103 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES •

    $default  reduce using rule 103 (scanf_operation)


State 173

  108 scan_args: scan_args COMMA • FORMAT_STRING COMMA ADDRESS ID
  109          | scan_args COMMA • FORMAT_INT COMMA ADDRESS ID
  110          | scan_args COMMA • FORMAT_FLOAT COMMA ADDRESS ID
  111          | scan_args COMMA • FORMAT_BOOL COMMA ADDRESS ID

    FORMAT_STRING  shift, and go to state 199
    FORMAT_INT     shift, and go to state 200
    FORMAT_FLOAT   shift, and go to state 201
    FORMAT_BOOL    shift, and go to state 202


State 174

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL • @16 SEMI for_comparison SEMI for_update block

    $default  reduce using rule 83 (@16)

    @16  go to state 203


State 175

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 204
    INT_TYPE_CAST    shift, and go to state 205
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 95

    id_number_compression  go to state 206
    number_val_spec        go to state 67


State 176

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 207
    INT_TYPE_CAST    shift, and go to state 208
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 95

    id_number_compression  go to state 209
    number_val_spec        go to state 67


State 177

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 210


State 178

   66 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 211


State 179

   77 if_statement: IF if_expression block ELSE block •

    $default  reduce using rule 77 (if_statement)


State 180

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call • $@12 RIGHT_PARENTESES

    $default  reduce using rule 51 ($@12)

    $@12  go to state 212


State 181

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL @9 • RIGHT_BRACKET type_spec

    RIGHT_BRACKET  shift, and go to state 213


State 182

   55 argument_list_call: ID $@13 • comma_expression argument_list_call

    COMMA  shift, and go to state 54

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 214


State 183

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 • RIGHT_PARENTESES SEMI

    RIGHT_PARENTESES  shift, and go to state 215


State 184

   57 argument_list_call: argument_val $@14 • comma_expression argument_list_call

    COMMA  shift, and go to state 54

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 216


State 185

   42 array_assign: ID $@10 LEFT_BRACKET id_int_compression RIGHT_BRACKET • ASSIGN assign_expression

    ASSIGN  shift, and go to state 217


State 186

   38 array_printable: ID @8 LEFT_BRACKET • id_int_compression RIGHT_BRACKET

    INT_VAL  shift, and go to state 158
    ID       shift, and go to state 159

    id_int_compression  go to state 218


State 187

   95 print_args: FORMAT_STRING COMMA ID •

    $default  reduce using rule 95 (print_args)


State 188

   96 print_args: FORMAT_INT COMMA ID •

    $default  reduce using rule 96 (print_args)


State 189

   97 print_args: FORMAT_FLOAT COMMA ID •

    $default  reduce using rule 97 (print_args)


State 190

   98 print_args: FORMAT_BOOL COMMA ID •

    $default  reduce using rule 98 (print_args)


State 191

   99 print_args: print_args COMMA FORMAT_STRING • COMMA ID

    COMMA  shift, and go to state 219


State 192

  100 print_args: print_args COMMA FORMAT_INT • COMMA ID

    COMMA  shift, and go to state 220


State 193

  101 print_args: print_args COMMA FORMAT_FLOAT • COMMA ID

    COMMA  shift, and go to state 221


State 194

  102 print_args: print_args COMMA FORMAT_BOOL • COMMA ID

    COMMA  shift, and go to state 222


State 195

  104 scan_args: FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 223


State 196

  105 scan_args: FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 224


State 197

  106 scan_args: FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 225


State 198

  107 scan_args: FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 226


State 199

  108 scan_args: scan_args COMMA FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 227


State 200

  109 scan_args: scan_args COMMA FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 228


State 201

  110 scan_args: scan_args COMMA FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 229


State 202

  111 scan_args: scan_args COMMA FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 230


State 203

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 • SEMI for_comparison SEMI for_update block

    SEMI  shift, and go to state 231


State 204

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 232
    number_val_spec        go to state 67


State 205

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 233
    number_val_spec        go to state 67


State 206

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 67 (operator_expression)


State 207

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 234
    number_val_spec        go to state 67


State 208

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 235
    number_val_spec        go to state 67


State 209

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 65 (operator_expression)


State 210

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 68 (operator_expression)


State 211

   66 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 66 (operator_expression)


State 212

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 236


State 213

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL @9 RIGHT_BRACKET • type_spec

    INT_TYPE     shift, and go to state 23
    FLOAT_TYPE   shift, and go to state 24
    STRING_TYPE  shift, and go to state 25
    VOID_TYPE    shift, and go to state 26
    BOOL_TYPE    shift, and go to state 27

    type_spec  go to state 237


State 214

   55 argument_list_call: ID $@13 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 150
    FLOAT_VAL   shift, and go to state 151
    INT_VAL     shift, and go to state 152
    BOOL_VAL    shift, and go to state 153
    ID          shift, and go to state 154

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 238
    argument_val        go to state 156


State 215

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES • SEMI

    SEMI  shift, and go to state 239


State 216

   57 argument_list_call: argument_val $@14 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 150
    FLOAT_VAL   shift, and go to state 151
    INT_VAL     shift, and go to state 152
    BOOL_VAL    shift, and go to state 153
    ID          shift, and go to state 154

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 240
    argument_val        go to state 156


State 217

   42 array_assign: ID $@10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 70
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    assign_expression      go to state 241
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 218

   38 array_printable: ID @8 LEFT_BRACKET id_int_compression • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 242


State 219

   99 print_args: print_args COMMA FORMAT_STRING COMMA • ID

    ID  shift, and go to state 243


State 220

  100 print_args: print_args COMMA FORMAT_INT COMMA • ID

    ID  shift, and go to state 244


State 221

  101 print_args: print_args COMMA FORMAT_FLOAT COMMA • ID

    ID  shift, and go to state 245


State 222

  102 print_args: print_args COMMA FORMAT_BOOL COMMA • ID

    ID  shift, and go to state 246


State 223

  104 scan_args: FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 104 (scan_args)


State 224

  105 scan_args: FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 105 (scan_args)


State 225

  106 scan_args: FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 106 (scan_args)


State 226

  107 scan_args: FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 107 (scan_args)


State 227

  108 scan_args: scan_args COMMA FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 247


State 228

  109 scan_args: scan_args COMMA FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 248


State 229

  110 scan_args: scan_args COMMA FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 249


State 230

  111 scan_args: scan_args COMMA FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 250


State 231

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI • for_comparison SEMI for_update block

    ID  shift, and go to state 251

    for_comparison  go to state 252


State 232

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 253


State 233

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 254


State 234

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 255


State 235

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 256


State 236

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES •

    $default  reduce using rule 52 (assign_expression)


State 237

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL @9 RIGHT_BRACKET type_spec •

    $default  reduce using rule 40 (array_declaration)


State 238

   55 argument_list_call: ID $@13 comma_expression argument_list_call •

    $default  reduce using rule 55 (argument_list_call)


State 239

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI •

    $default  reduce using rule 31 (statement)


State 240

   57 argument_list_call: argument_val $@14 comma_expression argument_list_call •

    $default  reduce using rule 57 (argument_list_call)


State 241

   42 array_assign: ID $@10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression •

    $default  reduce using rule 42 (array_assign)


State 242

   38 array_printable: ID @8 LEFT_BRACKET id_int_compression RIGHT_BRACKET •

    $default  reduce using rule 38 (array_printable)


State 243

   99 print_args: print_args COMMA FORMAT_STRING COMMA ID •

    $default  reduce using rule 99 (print_args)


State 244

  100 print_args: print_args COMMA FORMAT_INT COMMA ID •

    $default  reduce using rule 100 (print_args)


State 245

  101 print_args: print_args COMMA FORMAT_FLOAT COMMA ID •

    $default  reduce using rule 101 (print_args)


State 246

  102 print_args: print_args COMMA FORMAT_BOOL COMMA ID •

    $default  reduce using rule 102 (print_args)


State 247

  108 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 257


State 248

  109 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 258


State 249

  110 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 259


State 250

  111 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 260


State 251

   86 for_comparison: ID • $@17 comparadors id_number_compression

    $default  reduce using rule 85 ($@17)

    $@17  go to state 261


State 252

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison • SEMI for_update block

    SEMI  shift, and go to state 262


State 253

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 72 (operator_expression)


State 254

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 70 (operator_expression)


State 255

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 69 (operator_expression)


State 256

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 71 (operator_expression)


State 257

  108 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 108 (scan_args)


State 258

  109 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 109 (scan_args)


State 259

  110 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 110 (scan_args)


State 260

  111 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 111 (scan_args)


State 261

   86 for_comparison: ID $@17 • comparadors id_number_compression

    EQUALS      shift, and go to state 98
    LESS_EQUAL  shift, and go to state 99
    MORE_EQUAL  shift, and go to state 100
    LESS        shift, and go to state 101
    MORE        shift, and go to state 102
    DIFERS      shift, and go to state 103
    NOT         shift, and go to state 104

    comparadors  go to state 263


State 262

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI • for_update block

    ID  shift, and go to state 264

    for_update  go to state 265


State 263

   86 for_comparison: ID $@17 comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 95

    id_number_compression  go to state 266
    number_val_spec        go to state 67


State 264

   88 for_update: ID • $@18 PLUS_PLUS
   90           | ID • $@19 MINUS_MINUS

    MINUS_MINUS  reduce using rule 89 ($@19)
    $default     reduce using rule 87 ($@18)

    $@18  go to state 267
    $@19  go to state 268


State 265

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update • block

    LEFT_BRACE  shift, and go to state 30

    block  go to state 269


State 266

   86 for_comparison: ID $@17 comparadors id_number_compression •

    $default  reduce using rule 86 (for_comparison)


State 267

   88 for_update: ID $@18 • PLUS_PLUS

    PLUS_PLUS  shift, and go to state 270


State 268

   90 for_update: ID $@19 • MINUS_MINUS

    MINUS_MINUS  shift, and go to state 271


State 269

   84 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL @16 SEMI for_comparison SEMI for_update block •

    $default  reduce using rule 84 (for_statement)


State 270

   88 for_update: ID $@18 PLUS_PLUS •

    $default  reduce using rule 88 (for_update)


State 271

   90 for_update: ID $@19 MINUS_MINUS •

    $default  reduce using rule 90 (for_update)
