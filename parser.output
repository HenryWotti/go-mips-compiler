Terminals unused in grammar

    AND
    OR


Grammar

    0 $accept: program $end

    1 program: package_declaration import_declaration list_func_generic func_main

    2 package_declaration: PACKAGE MAIN

    3 import_declaration: ε

    4 $@1: ε

    5 import_declaration: IMPORT STRING_VAL $@1 import_declaration

    6 $@2: ε

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block

    8 block: LEFT_BRACE statement_list RIGHT_BRACE

    9 list_func_generic: ε
   10                  | list_func_generic func_generic

   11 $@3: ε

   12 $@4: ε

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

   14 argument_list: ε
   15              | argument_list comma_expression ID type_spec

   16 return_statement: RETURN assign_expression

   17 statement_list: statement
   18               | statement_list statement

   19 statement: if_statement
   20          | for_statement
   21          | assign_val SEMI
   22          | val_declaration SEMI
   23          | array_declaration SEMI
   24          | array_assign SEMI
   25          | print_operation SEMI
   26          | scanf_operation SEMI
   27          | string_list
   28          | return_statement SEMI

   29 $@5: ε

   30 $@6: ε

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI

   32 string_list: STRING_VAL
   33            | string_list COMMA STRING_VAL

   34 val_declaration: VAR ID type_spec

   35 $@7: ε

   36 assign_val: ID $@7 ASSIGN assign_expression

   37 $@8: ε

   38 array_printable: ID $@8 LEFT_BRACKET id_int_compression RIGHT_BRACKET

   39 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

   40 $@9: ε

   41 array_assign: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

   42 id_int_compression: ID
   43                   | INT_VAL

   44 assign_expression: string_list
   45                  | id_number_compression
   46                  | operator_expression
   47                  | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   48                  | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   49 $@10: ε

   50 $@11: ε

   51 assign_expression: ID $@10 LEFT_PARENTESES argument_list_call $@11 RIGHT_PARENTESES

   52 argument_list_call: ε

   53 $@12: ε

   54 argument_list_call: ID $@12 comma_expression argument_list_call

   55 $@13: ε

   56 argument_list_call: argument_val $@13 comma_expression argument_list_call

   57 argument_val: STRING_VAL
   58             | BOOL_VAL
   59             | INT_VAL
   60             | FLOAT_VAL

   61 comma_expression: ε
   62                 | COMMA

   63 operator_expression: id_number_compression operators id_number_compression
   64                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   65                    | id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   66                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   67                    | id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   69                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   72 id_number_compression: ID
   73                      | number_val_spec
   74                      | BOOL_VAL

   75 if_statement: IF if_expression block
   76             | IF if_expression block ELSE block

   77 if_expression: ID
   78              | BOOL_VAL
   79              | id_number_compression comparadors id_number_compression
   80              | operator_expression comparadors id_number_compression

   81 $@14: ε

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

   83 $@15: ε

   84 for_comparison: ID $@15 comparadors id_number_compression

   85 $@16: ε

   86 for_update: ID $@16 PLUS_PLUS

   87 $@17: ε

   88 for_update: ID $@17 MINUS_MINUS

   89 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES

   90 print_args: STRING_VAL
   91           | id_number_compression
   92           | array_printable

   93 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES

   94 scan_args: FORMAT_STRING COMMA ADDRESS ID
   95          | FORMAT_INT COMMA ADDRESS ID
   96          | FORMAT_FLOAT COMMA ADDRESS ID
   97          | FORMAT_BOOL COMMA ADDRESS ID
   98          | scan_args COMMA FORMAT_STRING COMMA ADDRESS ID
   99          | scan_args COMMA FORMAT_INT COMMA ADDRESS ID
  100          | scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID
  101          | scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID

  102 type_spec: INT_TYPE
  103          | STRING_TYPE
  104          | FLOAT_TYPE
  105          | BOOL_TYPE
  106          | VOID_TYPE

  107 number_val_spec: INT_VAL
  108                | FLOAT_VAL

  109 comparadors: LESS
  110            | MORE
  111            | LESS_EQUAL
  112            | MORE_EQUAL
  113            | DIFERS
  114            | NOT
  115            | EQUALS

  116 operators: PLUS
  117          | MINUS
  118          | TIMES
  119          | OVER
  120          | REST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FLOAT_TYPE_CAST (258) 48 66 67 68 69 71
    INT_TYPE_CAST (259) 47 64 65 68 69 70
    STRING_VAL (260) 5 32 33 57 90
    ELSE (261) 76
    FOR (262) 82
    FUNC (263) 7 13
    IF (264) 75 76
    PACKAGE (265) 2
    IMPORT (266) 5
    RETURN (267) 16
    VAR (268) 34 39
    INT_TYPE (269) 102
    FLOAT_TYPE (270) 104
    STRING_TYPE (271) 103
    VOID_TYPE (272) 106
    BOOL_TYPE (273) 105
    PLUS_PLUS (274) 86
    PLUS (275) 116
    MINUS_MINUS (276) 88
    MINUS (277) 117
    TIMES (278) 118
    OVER (279) 119
    REST (280) 120
    AND (281)
    OR (282)
    EQUALS (283) 115
    LESS_EQUAL (284) 111
    MORE_EQUAL (285) 112
    LESS (286) 109
    MORE (287) 110
    DIFERS (288) 113
    NOT (289) 114
    LEFT_PARENTESES (290) 7 13 31 51 89 93
    RIGHT_PARENTESES (291) 7 13 31 47 48 51 64 65 66 67 68 69 70 71 89 93
    LEFT_BRACKET (292) 38 39 41
    RIGHT_BRACKET (293) 38 39 41
    LEFT_BRACE (294) 8
    RIGHT_BRACE (295) 8
    FLOAT_VAL (296) 60 108
    INT_VAL (297) 39 43 59 82 107
    BOOL_VAL (298) 58 74 78
    ID (299) 13 15 31 34 36 38 39 41 42 51 54 72 77 82 84 86 88 94 95 96 97 98 99 100 101
    SHORT_ASSIGN (300) 82
    ASSIGN (301) 36 41
    SEMI (302) 21 22 23 24 25 26 28 31 82
    ADDRESS (303) 94 95 96 97 98 99 100 101
    COMMA (304) 33 62 94 95 96 97 98 99 100 101
    MAIN (305) 2 7
    PRINTLN (306) 89
    SCANF (307) 93
    FORMAT_STRING (308) 94 98
    FORMAT_INT (309) 95 99
    FORMAT_FLOAT (310) 96 100
    FORMAT_BOOL (311) 97 101
    IFX (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 1
        on right: 0
    package_declaration (60)
        on left: 2
        on right: 1
    import_declaration (61)
        on left: 3 5
        on right: 1 5
    $@1 (62)
        on left: 4
        on right: 5
    func_main (63)
        on left: 7
        on right: 1
    $@2 (64)
        on left: 6
        on right: 7
    block (65)
        on left: 8
        on right: 7 13 75 76 82
    list_func_generic (66)
        on left: 9 10
        on right: 1 10
    func_generic (67)
        on left: 13
        on right: 10
    $@3 (68)
        on left: 11
        on right: 13
    $@4 (69)
        on left: 12
        on right: 13
    argument_list (70)
        on left: 14 15
        on right: 13 15
    return_statement (71)
        on left: 16
        on right: 28
    statement_list (72)
        on left: 17 18
        on right: 8 18
    statement (73)
        on left: 19 20 21 22 23 24 25 26 27 28 31
        on right: 17 18
    $@5 (74)
        on left: 29
        on right: 31
    $@6 (75)
        on left: 30
        on right: 31
    string_list (76)
        on left: 32 33
        on right: 27 33 44
    val_declaration (77)
        on left: 34
        on right: 22
    assign_val (78)
        on left: 36
        on right: 21
    $@7 (79)
        on left: 35
        on right: 36
    array_printable (80)
        on left: 38
        on right: 92
    $@8 (81)
        on left: 37
        on right: 38
    array_declaration (82)
        on left: 39
        on right: 23
    array_assign (83)
        on left: 41
        on right: 24
    $@9 (84)
        on left: 40
        on right: 41
    id_int_compression (85)
        on left: 42 43
        on right: 38 41
    assign_expression (86)
        on left: 44 45 46 47 48 51
        on right: 16 36 41
    $@10 (87)
        on left: 49
        on right: 51
    $@11 (88)
        on left: 50
        on right: 51
    argument_list_call (89)
        on left: 52 54 56
        on right: 31 51 54 56
    $@12 (90)
        on left: 53
        on right: 54
    $@13 (91)
        on left: 55
        on right: 56
    argument_val (92)
        on left: 57 58 59 60
        on right: 56
    comma_expression (93)
        on left: 61 62
        on right: 15 54 56
    operator_expression (94)
        on left: 63 64 65 66 67 68 69 70 71
        on right: 46 80
    id_number_compression (95)
        on left: 72 73 74
        on right: 45 47 48 63 64 65 66 67 68 69 70 71 79 80 84 91
    if_statement (96)
        on left: 75 76
        on right: 19
    if_expression (97)
        on left: 77 78 79 80
        on right: 75 76
    for_statement (98)
        on left: 82
        on right: 20
    $@14 (99)
        on left: 81
        on right: 82
    for_comparison (100)
        on left: 84
        on right: 82
    $@15 (101)
        on left: 83
        on right: 84
    for_update (102)
        on left: 86 88
        on right: 82
    $@16 (103)
        on left: 85
        on right: 86
    $@17 (104)
        on left: 87
        on right: 88
    print_operation (105)
        on left: 89
        on right: 25
    print_args (106)
        on left: 90 91 92
        on right: 89
    scanf_operation (107)
        on left: 93
        on right: 26
    scan_args (108)
        on left: 94 95 96 97 98 99 100 101
        on right: 93 98 99 100 101
    type_spec (109)
        on left: 102 103 104 105 106
        on right: 13 15 34 39
    number_val_spec (110)
        on left: 107 108
        on right: 73
    comparadors (111)
        on left: 109 110 111 112 113 114 115
        on right: 79 80 84
    operators (112)
        on left: 116 117 118 119 120
        on right: 63 64 65 66 67 68 69 70 71


State 0

    0 $accept: • program $end

    PACKAGE  shift, and go to state 1

    program              go to state 2
    package_declaration  go to state 3


State 1

    2 package_declaration: PACKAGE • MAIN

    MAIN  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: package_declaration • import_declaration list_func_generic func_main

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 7


State 4

    2 package_declaration: PACKAGE MAIN •

    $default  reduce using rule 2 (package_declaration)


State 5

    0 $accept: program $end •

    $default  accept


State 6

    5 import_declaration: IMPORT • STRING_VAL $@1 import_declaration

    STRING_VAL  shift, and go to state 8


State 7

    1 program: package_declaration import_declaration • list_func_generic func_main

    $default  reduce using rule 9 (list_func_generic)

    list_func_generic  go to state 9


State 8

    5 import_declaration: IMPORT STRING_VAL • $@1 import_declaration

    $default  reduce using rule 4 ($@1)

    $@1  go to state 10


State 9

    1 program: package_declaration import_declaration list_func_generic • func_main
   10 list_func_generic: list_func_generic • func_generic

    FUNC  shift, and go to state 11

    func_main     go to state 12
    func_generic  go to state 13


State 10

    5 import_declaration: IMPORT STRING_VAL $@1 • import_declaration

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 14


State 11

    7 func_main: FUNC • MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block
   13 func_generic: FUNC • ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    ID    shift, and go to state 15
    MAIN  shift, and go to state 16


State 12

    1 program: package_declaration import_declaration list_func_generic func_main •

    $default  reduce using rule 1 (program)


State 13

   10 list_func_generic: list_func_generic func_generic •

    $default  reduce using rule 10 (list_func_generic)


State 14

    5 import_declaration: IMPORT STRING_VAL $@1 import_declaration •

    $default  reduce using rule 5 (import_declaration)


State 15

   13 func_generic: FUNC ID • $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    $default  reduce using rule 11 ($@3)

    $@3  go to state 17


State 16

    7 func_main: FUNC MAIN • $@2 LEFT_PARENTESES RIGHT_PARENTESES block

    $default  reduce using rule 6 ($@2)

    $@2  go to state 18


State 17

   13 func_generic: FUNC ID $@3 • LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    LEFT_PARENTESES  shift, and go to state 19


State 18

    7 func_main: FUNC MAIN $@2 • LEFT_PARENTESES RIGHT_PARENTESES block

    LEFT_PARENTESES  shift, and go to state 20


State 19

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES • argument_list RIGHT_PARENTESES type_spec $@4 block

    $default  reduce using rule 14 (argument_list)

    argument_list  go to state 21


State 20

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES • RIGHT_PARENTESES block

    RIGHT_PARENTESES  shift, and go to state 22


State 21

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list • RIGHT_PARENTESES type_spec $@4 block
   15 argument_list: argument_list • comma_expression ID type_spec

    RIGHT_PARENTESES  shift, and go to state 23
    COMMA             shift, and go to state 24

    $default  reduce using rule 61 (comma_expression)

    comma_expression  go to state 25


State 22

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES • block

    LEFT_BRACE  shift, and go to state 26

    block  go to state 27


State 23

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES • type_spec $@4 block

    INT_TYPE     shift, and go to state 28
    FLOAT_TYPE   shift, and go to state 29
    STRING_TYPE  shift, and go to state 30
    VOID_TYPE    shift, and go to state 31
    BOOL_TYPE    shift, and go to state 32

    type_spec  go to state 33


State 24

   62 comma_expression: COMMA •

    $default  reduce using rule 62 (comma_expression)


State 25

   15 argument_list: argument_list comma_expression • ID type_spec

    ID  shift, and go to state 34


State 26

    8 block: LEFT_BRACE • statement_list RIGHT_BRACE

    STRING_VAL  shift, and go to state 35
    FOR         shift, and go to state 36
    IF          shift, and go to state 37
    RETURN      shift, and go to state 38
    VAR         shift, and go to state 39
    ID          shift, and go to state 40
    PRINTLN     shift, and go to state 41
    SCANF       shift, and go to state 42

    return_statement   go to state 43
    statement_list     go to state 44
    statement          go to state 45
    string_list        go to state 46
    val_declaration    go to state 47
    assign_val         go to state 48
    array_declaration  go to state 49
    array_assign       go to state 50
    if_statement       go to state 51
    for_statement      go to state 52
    print_operation    go to state 53
    scanf_operation    go to state 54


State 27

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block •

    $default  reduce using rule 7 (func_main)


State 28

  102 type_spec: INT_TYPE •

    $default  reduce using rule 102 (type_spec)


State 29

  104 type_spec: FLOAT_TYPE •

    $default  reduce using rule 104 (type_spec)


State 30

  103 type_spec: STRING_TYPE •

    $default  reduce using rule 103 (type_spec)


State 31

  106 type_spec: VOID_TYPE •

    $default  reduce using rule 106 (type_spec)


State 32

  105 type_spec: BOOL_TYPE •

    $default  reduce using rule 105 (type_spec)


State 33

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec • $@4 block

    $default  reduce using rule 12 ($@4)

    $@4  go to state 55


State 34

   15 argument_list: argument_list comma_expression ID • type_spec

    INT_TYPE     shift, and go to state 28
    FLOAT_TYPE   shift, and go to state 29
    STRING_TYPE  shift, and go to state 30
    VOID_TYPE    shift, and go to state 31
    BOOL_TYPE    shift, and go to state 32

    type_spec  go to state 56


State 35

   32 string_list: STRING_VAL •

    $default  reduce using rule 32 (string_list)


State 36

   82 for_statement: FOR • ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    ID  shift, and go to state 57


State 37

   75 if_statement: IF • if_expression block
   76             | IF • if_expression block ELSE block

    FLOAT_TYPE_CAST  shift, and go to state 58
    INT_TYPE_CAST    shift, and go to state 59
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 62
    ID               shift, and go to state 63

    operator_expression    go to state 64
    id_number_compression  go to state 65
    if_expression          go to state 66
    number_val_spec        go to state 67


State 38

   16 return_statement: RETURN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 71

    string_list            go to state 72
    assign_expression      go to state 73
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 39

   34 val_declaration: VAR • ID type_spec
   39 array_declaration: VAR • ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

    ID  shift, and go to state 76


State 40

   31 statement: ID • $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI
   36 assign_val: ID • $@7 ASSIGN assign_expression
   41 array_assign: ID • $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  reduce using rule 40 ($@9)
    ASSIGN        reduce using rule 35 ($@7)
    $default      reduce using rule 29 ($@5)

    $@5  go to state 77
    $@7  go to state 78
    $@9  go to state 79


State 41

   89 print_operation: PRINTLN • LEFT_PARENTESES print_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 80


State 42

   93 scanf_operation: SCANF • LEFT_PARENTESES scan_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 81


State 43

   28 statement: return_statement • SEMI

    SEMI  shift, and go to state 82


State 44

    8 block: LEFT_BRACE statement_list • RIGHT_BRACE
   18 statement_list: statement_list • statement

    STRING_VAL   shift, and go to state 35
    FOR          shift, and go to state 36
    IF           shift, and go to state 37
    RETURN       shift, and go to state 38
    VAR          shift, and go to state 39
    RIGHT_BRACE  shift, and go to state 83
    ID           shift, and go to state 40
    PRINTLN      shift, and go to state 41
    SCANF        shift, and go to state 42

    return_statement   go to state 43
    statement          go to state 84
    string_list        go to state 46
    val_declaration    go to state 47
    assign_val         go to state 48
    array_declaration  go to state 49
    array_assign       go to state 50
    if_statement       go to state 51
    for_statement      go to state 52
    print_operation    go to state 53
    scanf_operation    go to state 54


State 45

   17 statement_list: statement •

    $default  reduce using rule 17 (statement_list)


State 46

   27 statement: string_list •
   33 string_list: string_list • COMMA STRING_VAL

    COMMA  shift, and go to state 85

    $default  reduce using rule 27 (statement)


State 47

   22 statement: val_declaration • SEMI

    SEMI  shift, and go to state 86


State 48

   21 statement: assign_val • SEMI

    SEMI  shift, and go to state 87


State 49

   23 statement: array_declaration • SEMI

    SEMI  shift, and go to state 88


State 50

   24 statement: array_assign • SEMI

    SEMI  shift, and go to state 89


State 51

   19 statement: if_statement •

    $default  reduce using rule 19 (statement)


State 52

   20 statement: for_statement •

    $default  reduce using rule 20 (statement)


State 53

   25 statement: print_operation • SEMI

    SEMI  shift, and go to state 90


State 54

   26 statement: scanf_operation • SEMI

    SEMI  shift, and go to state 91


State 55

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 • block

    LEFT_BRACE  shift, and go to state 26

    block  go to state 92


State 56

   15 argument_list: argument_list comma_expression ID type_spec •

    $default  reduce using rule 15 (argument_list)


State 57

   82 for_statement: FOR ID • $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    $default  reduce using rule 81 ($@14)

    $@14  go to state 93


State 58

   66 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 95
    number_val_spec        go to state 67


State 59

   64 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   68                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 96
    number_val_spec        go to state 67


State 60

  108 number_val_spec: FLOAT_VAL •

    $default  reduce using rule 108 (number_val_spec)


State 61

  107 number_val_spec: INT_VAL •

    $default  reduce using rule 107 (number_val_spec)


State 62

   74 id_number_compression: BOOL_VAL •
   78 if_expression: BOOL_VAL •

    LEFT_BRACE  reduce using rule 78 (if_expression)
    $default    reduce using rule 74 (id_number_compression)


State 63

   72 id_number_compression: ID •
   77 if_expression: ID •

    LEFT_BRACE  reduce using rule 77 (if_expression)
    $default    reduce using rule 72 (id_number_compression)


State 64

   80 if_expression: operator_expression • comparadors id_number_compression

    EQUALS      shift, and go to state 97
    LESS_EQUAL  shift, and go to state 98
    MORE_EQUAL  shift, and go to state 99
    LESS        shift, and go to state 100
    MORE        shift, and go to state 101
    DIFERS      shift, and go to state 102
    NOT         shift, and go to state 103

    comparadors  go to state 104


State 65

   63 operator_expression: id_number_compression • operators id_number_compression
   65                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   67                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   79 if_expression: id_number_compression • comparadors id_number_compression

    PLUS        shift, and go to state 105
    MINUS       shift, and go to state 106
    TIMES       shift, and go to state 107
    OVER        shift, and go to state 108
    REST        shift, and go to state 109
    EQUALS      shift, and go to state 97
    LESS_EQUAL  shift, and go to state 98
    MORE_EQUAL  shift, and go to state 99
    LESS        shift, and go to state 100
    MORE        shift, and go to state 101
    DIFERS      shift, and go to state 102
    NOT         shift, and go to state 103

    comparadors  go to state 110
    operators    go to state 111


State 66

   75 if_statement: IF if_expression • block
   76             | IF if_expression • block ELSE block

    LEFT_BRACE  shift, and go to state 26

    block  go to state 112


State 67

   73 id_number_compression: number_val_spec •

    $default  reduce using rule 73 (id_number_compression)


State 68

   48 assign_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   66 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 113
    number_val_spec        go to state 67


State 69

   47 assign_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   64 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   68                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 114
    number_val_spec        go to state 67


State 70

   74 id_number_compression: BOOL_VAL •

    $default  reduce using rule 74 (id_number_compression)


State 71

   51 assign_expression: ID • $@10 LEFT_PARENTESES argument_list_call $@11 RIGHT_PARENTESES
   72 id_number_compression: ID •

    LEFT_PARENTESES  reduce using rule 49 ($@10)
    $default         reduce using rule 72 (id_number_compression)

    $@10  go to state 115


State 72

   33 string_list: string_list • COMMA STRING_VAL
   44 assign_expression: string_list •

    COMMA  shift, and go to state 85

    $default  reduce using rule 44 (assign_expression)


State 73

   16 return_statement: RETURN assign_expression •

    $default  reduce using rule 16 (return_statement)


State 74

   46 assign_expression: operator_expression •

    $default  reduce using rule 46 (assign_expression)


State 75

   45 assign_expression: id_number_compression •
   63 operator_expression: id_number_compression • operators id_number_compression
   65                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   67                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    TIMES  shift, and go to state 107
    OVER   shift, and go to state 108
    REST   shift, and go to state 109

    $default  reduce using rule 45 (assign_expression)

    operators  go to state 111


State 76

   34 val_declaration: VAR ID • type_spec
   39 array_declaration: VAR ID • LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

    INT_TYPE      shift, and go to state 28
    FLOAT_TYPE    shift, and go to state 29
    STRING_TYPE   shift, and go to state 30
    VOID_TYPE     shift, and go to state 31
    BOOL_TYPE     shift, and go to state 32
    LEFT_BRACKET  shift, and go to state 116

    type_spec  go to state 117


State 77

   31 statement: ID $@5 • LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI

    LEFT_PARENTESES  shift, and go to state 118


State 78

   36 assign_val: ID $@7 • ASSIGN assign_expression

    ASSIGN  shift, and go to state 119


State 79

   41 array_assign: ID $@9 • LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  shift, and go to state 120


State 80

   89 print_operation: PRINTLN LEFT_PARENTESES • print_args RIGHT_PARENTESES

    STRING_VAL  shift, and go to state 121
    FLOAT_VAL   shift, and go to state 60
    INT_VAL     shift, and go to state 61
    BOOL_VAL    shift, and go to state 70
    ID          shift, and go to state 122

    array_printable        go to state 123
    id_number_compression  go to state 124
    print_args             go to state 125
    number_val_spec        go to state 67


State 81

   93 scanf_operation: SCANF LEFT_PARENTESES • scan_args RIGHT_PARENTESES

    FORMAT_STRING  shift, and go to state 126
    FORMAT_INT     shift, and go to state 127
    FORMAT_FLOAT   shift, and go to state 128
    FORMAT_BOOL    shift, and go to state 129

    scan_args  go to state 130


State 82

   28 statement: return_statement SEMI •

    $default  reduce using rule 28 (statement)


State 83

    8 block: LEFT_BRACE statement_list RIGHT_BRACE •

    $default  reduce using rule 8 (block)


State 84

   18 statement_list: statement_list statement •

    $default  reduce using rule 18 (statement_list)


State 85

   33 string_list: string_list COMMA • STRING_VAL

    STRING_VAL  shift, and go to state 131


State 86

   22 statement: val_declaration SEMI •

    $default  reduce using rule 22 (statement)


State 87

   21 statement: assign_val SEMI •

    $default  reduce using rule 21 (statement)


State 88

   23 statement: array_declaration SEMI •

    $default  reduce using rule 23 (statement)


State 89

   24 statement: array_assign SEMI •

    $default  reduce using rule 24 (statement)


State 90

   25 statement: print_operation SEMI •

    $default  reduce using rule 25 (statement)


State 91

   26 statement: scanf_operation SEMI •

    $default  reduce using rule 26 (statement)


State 92

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block •

    $default  reduce using rule 13 (func_generic)


State 93

   82 for_statement: FOR ID $@14 • SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    SHORT_ASSIGN  shift, and go to state 132


State 94

   72 id_number_compression: ID •

    $default  reduce using rule 72 (id_number_compression)


State 95

   66 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 133


State 96

   64 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   68                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 134


State 97

  115 comparadors: EQUALS •

    $default  reduce using rule 115 (comparadors)


State 98

  111 comparadors: LESS_EQUAL •

    $default  reduce using rule 111 (comparadors)


State 99

  112 comparadors: MORE_EQUAL •

    $default  reduce using rule 112 (comparadors)


State 100

  109 comparadors: LESS •

    $default  reduce using rule 109 (comparadors)


State 101

  110 comparadors: MORE •

    $default  reduce using rule 110 (comparadors)


State 102

  113 comparadors: DIFERS •

    $default  reduce using rule 113 (comparadors)


State 103

  114 comparadors: NOT •

    $default  reduce using rule 114 (comparadors)


State 104

   80 if_expression: operator_expression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 135
    number_val_spec        go to state 67


State 105

  116 operators: PLUS •

    $default  reduce using rule 116 (operators)


State 106

  117 operators: MINUS •

    $default  reduce using rule 117 (operators)


State 107

  118 operators: TIMES •

    $default  reduce using rule 118 (operators)


State 108

  119 operators: OVER •

    $default  reduce using rule 119 (operators)


State 109

  120 operators: REST •

    $default  reduce using rule 120 (operators)


State 110

   79 if_expression: id_number_compression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 136
    number_val_spec        go to state 67


State 111

   63 operator_expression: id_number_compression operators • id_number_compression
   65                    | id_number_compression operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   67                    | id_number_compression operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 137
    INT_TYPE_CAST    shift, and go to state 138
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 94

    id_number_compression  go to state 139
    number_val_spec        go to state 67


State 112

   75 if_statement: IF if_expression block •
   76             | IF if_expression block • ELSE block

    ELSE  shift, and go to state 140

    $default  reduce using rule 75 (if_statement)


State 113

   48 assign_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   66 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 141


State 114

   47 assign_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   64 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   68                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 142


State 115

   51 assign_expression: ID $@10 • LEFT_PARENTESES argument_list_call $@11 RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 143


State 116

   39 array_declaration: VAR ID LEFT_BRACKET • INT_VAL RIGHT_BRACKET type_spec

    INT_VAL  shift, and go to state 144


State 117

   34 val_declaration: VAR ID type_spec •

    $default  reduce using rule 34 (val_declaration)


State 118

   31 statement: ID $@5 LEFT_PARENTESES • argument_list_call $@6 RIGHT_PARENTESES SEMI

    STRING_VAL  shift, and go to state 145
    FLOAT_VAL   shift, and go to state 146
    INT_VAL     shift, and go to state 147
    BOOL_VAL    shift, and go to state 148
    ID          shift, and go to state 149

    $default  reduce using rule 52 (argument_list_call)

    argument_list_call  go to state 150
    argument_val        go to state 151


State 119

   36 assign_val: ID $@7 ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 71

    string_list            go to state 72
    assign_expression      go to state 152
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 120

   41 array_assign: ID $@9 LEFT_BRACKET • id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    INT_VAL  shift, and go to state 153
    ID       shift, and go to state 154

    id_int_compression  go to state 155


State 121

   90 print_args: STRING_VAL •

    $default  reduce using rule 90 (print_args)


State 122

   38 array_printable: ID • $@8 LEFT_BRACKET id_int_compression RIGHT_BRACKET
   72 id_number_compression: ID •

    RIGHT_PARENTESES  reduce using rule 72 (id_number_compression)
    $default          reduce using rule 37 ($@8)

    $@8  go to state 156


State 123

   92 print_args: array_printable •

    $default  reduce using rule 92 (print_args)


State 124

   91 print_args: id_number_compression •

    $default  reduce using rule 91 (print_args)


State 125

   89 print_operation: PRINTLN LEFT_PARENTESES print_args • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 157


State 126

   94 scan_args: FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 158


State 127

   95 scan_args: FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 159


State 128

   96 scan_args: FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 160


State 129

   97 scan_args: FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 161


State 130

   93 scanf_operation: SCANF LEFT_PARENTESES scan_args • RIGHT_PARENTESES
   98 scan_args: scan_args • COMMA FORMAT_STRING COMMA ADDRESS ID
   99          | scan_args • COMMA FORMAT_INT COMMA ADDRESS ID
  100          | scan_args • COMMA FORMAT_FLOAT COMMA ADDRESS ID
  101          | scan_args • COMMA FORMAT_BOOL COMMA ADDRESS ID

    RIGHT_PARENTESES  shift, and go to state 162
    COMMA             shift, and go to state 163


State 131

   33 string_list: string_list COMMA STRING_VAL •

    $default  reduce using rule 33 (string_list)


State 132

   82 for_statement: FOR ID $@14 SHORT_ASSIGN • INT_VAL SEMI for_comparison SEMI for_update block

    INT_VAL  shift, and go to state 164


State 133

   66 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    TIMES  shift, and go to state 107
    OVER   shift, and go to state 108
    REST   shift, and go to state 109

    operators  go to state 165


State 134

   64 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   68                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    TIMES  shift, and go to state 107
    OVER   shift, and go to state 108
    REST   shift, and go to state 109

    operators  go to state 166


State 135

   80 if_expression: operator_expression comparadors id_number_compression •

    $default  reduce using rule 80 (if_expression)


State 136

   79 if_expression: id_number_compression comparadors id_number_compression •

    $default  reduce using rule 79 (if_expression)


State 137

   67 operator_expression: id_number_compression operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 167
    number_val_spec        go to state 67


State 138

   65 operator_expression: id_number_compression operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 168
    number_val_spec        go to state 67


State 139

   63 operator_expression: id_number_compression operators id_number_compression •

    $default  reduce using rule 63 (operator_expression)


State 140

   76 if_statement: IF if_expression block ELSE • block

    LEFT_BRACE  shift, and go to state 26

    block  go to state 169


State 141

   48 assign_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   66 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    TIMES  shift, and go to state 107
    OVER   shift, and go to state 108
    REST   shift, and go to state 109

    $default  reduce using rule 48 (assign_expression)

    operators  go to state 165


State 142

   47 assign_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   64 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   68                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 105
    MINUS  shift, and go to state 106
    TIMES  shift, and go to state 107
    OVER   shift, and go to state 108
    REST   shift, and go to state 109

    $default  reduce using rule 47 (assign_expression)

    operators  go to state 166


State 143

   51 assign_expression: ID $@10 LEFT_PARENTESES • argument_list_call $@11 RIGHT_PARENTESES

    STRING_VAL  shift, and go to state 145
    FLOAT_VAL   shift, and go to state 146
    INT_VAL     shift, and go to state 147
    BOOL_VAL    shift, and go to state 148
    ID          shift, and go to state 149

    $default  reduce using rule 52 (argument_list_call)

    argument_list_call  go to state 170
    argument_val        go to state 151


State 144

   39 array_declaration: VAR ID LEFT_BRACKET INT_VAL • RIGHT_BRACKET type_spec

    RIGHT_BRACKET  shift, and go to state 171


State 145

   57 argument_val: STRING_VAL •

    $default  reduce using rule 57 (argument_val)


State 146

   60 argument_val: FLOAT_VAL •

    $default  reduce using rule 60 (argument_val)


State 147

   59 argument_val: INT_VAL •

    $default  reduce using rule 59 (argument_val)


State 148

   58 argument_val: BOOL_VAL •

    $default  reduce using rule 58 (argument_val)


State 149

   54 argument_list_call: ID • $@12 comma_expression argument_list_call

    $default  reduce using rule 53 ($@12)

    $@12  go to state 172


State 150

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call • $@6 RIGHT_PARENTESES SEMI

    $default  reduce using rule 30 ($@6)

    $@6  go to state 173


State 151

   56 argument_list_call: argument_val • $@13 comma_expression argument_list_call

    $default  reduce using rule 55 ($@13)

    $@13  go to state 174


State 152

   36 assign_val: ID $@7 ASSIGN assign_expression •

    $default  reduce using rule 36 (assign_val)


State 153

   43 id_int_compression: INT_VAL •

    $default  reduce using rule 43 (id_int_compression)


State 154

   42 id_int_compression: ID •

    $default  reduce using rule 42 (id_int_compression)


State 155

   41 array_assign: ID $@9 LEFT_BRACKET id_int_compression • RIGHT_BRACKET ASSIGN assign_expression

    RIGHT_BRACKET  shift, and go to state 175


State 156

   38 array_printable: ID $@8 • LEFT_BRACKET id_int_compression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 176


State 157

   89 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES •

    $default  reduce using rule 89 (print_operation)


State 158

   94 scan_args: FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 177


State 159

   95 scan_args: FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 178


State 160

   96 scan_args: FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 179


State 161

   97 scan_args: FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 180


State 162

   93 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES •

    $default  reduce using rule 93 (scanf_operation)


State 163

   98 scan_args: scan_args COMMA • FORMAT_STRING COMMA ADDRESS ID
   99          | scan_args COMMA • FORMAT_INT COMMA ADDRESS ID
  100          | scan_args COMMA • FORMAT_FLOAT COMMA ADDRESS ID
  101          | scan_args COMMA • FORMAT_BOOL COMMA ADDRESS ID

    FORMAT_STRING  shift, and go to state 181
    FORMAT_INT     shift, and go to state 182
    FORMAT_FLOAT   shift, and go to state 183
    FORMAT_BOOL    shift, and go to state 184


State 164

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL • SEMI for_comparison SEMI for_update block

    SEMI  shift, and go to state 185


State 165

   66 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   69                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 186
    INT_TYPE_CAST    shift, and go to state 187
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 94

    id_number_compression  go to state 188
    number_val_spec        go to state 67


State 166

   64 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   68                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 189
    INT_TYPE_CAST    shift, and go to state 190
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 94

    id_number_compression  go to state 191
    number_val_spec        go to state 67


State 167

   67 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 192


State 168

   65 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 193


State 169

   76 if_statement: IF if_expression block ELSE block •

    $default  reduce using rule 76 (if_statement)


State 170

   51 assign_expression: ID $@10 LEFT_PARENTESES argument_list_call • $@11 RIGHT_PARENTESES

    $default  reduce using rule 50 ($@11)

    $@11  go to state 194


State 171

   39 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET • type_spec

    INT_TYPE     shift, and go to state 28
    FLOAT_TYPE   shift, and go to state 29
    STRING_TYPE  shift, and go to state 30
    VOID_TYPE    shift, and go to state 31
    BOOL_TYPE    shift, and go to state 32

    type_spec  go to state 195


State 172

   54 argument_list_call: ID $@12 • comma_expression argument_list_call

    COMMA  shift, and go to state 24

    $default  reduce using rule 61 (comma_expression)

    comma_expression  go to state 196


State 173

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 • RIGHT_PARENTESES SEMI

    RIGHT_PARENTESES  shift, and go to state 197


State 174

   56 argument_list_call: argument_val $@13 • comma_expression argument_list_call

    COMMA  shift, and go to state 24

    $default  reduce using rule 61 (comma_expression)

    comma_expression  go to state 198


State 175

   41 array_assign: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET • ASSIGN assign_expression

    ASSIGN  shift, and go to state 199


State 176

   38 array_printable: ID $@8 LEFT_BRACKET • id_int_compression RIGHT_BRACKET

    INT_VAL  shift, and go to state 153
    ID       shift, and go to state 154

    id_int_compression  go to state 200


State 177

   94 scan_args: FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 201


State 178

   95 scan_args: FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 202


State 179

   96 scan_args: FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 203


State 180

   97 scan_args: FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 204


State 181

   98 scan_args: scan_args COMMA FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 205


State 182

   99 scan_args: scan_args COMMA FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 206


State 183

  100 scan_args: scan_args COMMA FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 207


State 184

  101 scan_args: scan_args COMMA FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 208


State 185

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI • for_comparison SEMI for_update block

    ID  shift, and go to state 209

    for_comparison  go to state 210


State 186

   71 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 211
    number_val_spec        go to state 67


State 187

   69 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 212
    number_val_spec        go to state 67


State 188

   66 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 66 (operator_expression)


State 189

   68 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 213
    number_val_spec        go to state 67


State 190

   70 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 214
    number_val_spec        go to state 67


State 191

   64 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 64 (operator_expression)


State 192

   67 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 67 (operator_expression)


State 193

   65 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 65 (operator_expression)


State 194

   51 assign_expression: ID $@10 LEFT_PARENTESES argument_list_call $@11 • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 215


State 195

   39 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec •

    $default  reduce using rule 39 (array_declaration)


State 196

   54 argument_list_call: ID $@12 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 145
    FLOAT_VAL   shift, and go to state 146
    INT_VAL     shift, and go to state 147
    BOOL_VAL    shift, and go to state 148
    ID          shift, and go to state 149

    $default  reduce using rule 52 (argument_list_call)

    argument_list_call  go to state 216
    argument_val        go to state 151


State 197

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES • SEMI

    SEMI  shift, and go to state 217


State 198

   56 argument_list_call: argument_val $@13 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 145
    FLOAT_VAL   shift, and go to state 146
    INT_VAL     shift, and go to state 147
    BOOL_VAL    shift, and go to state 148
    ID          shift, and go to state 149

    $default  reduce using rule 52 (argument_list_call)

    argument_list_call  go to state 218
    argument_val        go to state 151


State 199

   41 array_assign: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 68
    INT_TYPE_CAST    shift, and go to state 69
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 60
    INT_VAL          shift, and go to state 61
    BOOL_VAL         shift, and go to state 70
    ID               shift, and go to state 71

    string_list            go to state 72
    assign_expression      go to state 219
    operator_expression    go to state 74
    id_number_compression  go to state 75
    number_val_spec        go to state 67


State 200

   38 array_printable: ID $@8 LEFT_BRACKET id_int_compression • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 220


State 201

   94 scan_args: FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 94 (scan_args)


State 202

   95 scan_args: FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 95 (scan_args)


State 203

   96 scan_args: FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 96 (scan_args)


State 204

   97 scan_args: FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 97 (scan_args)


State 205

   98 scan_args: scan_args COMMA FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 221


State 206

   99 scan_args: scan_args COMMA FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 222


State 207

  100 scan_args: scan_args COMMA FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 223


State 208

  101 scan_args: scan_args COMMA FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 224


State 209

   84 for_comparison: ID • $@15 comparadors id_number_compression

    $default  reduce using rule 83 ($@15)

    $@15  go to state 225


State 210

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison • SEMI for_update block

    SEMI  shift, and go to state 226


State 211

   71 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 227


State 212

   69 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 228


State 213

   68 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 229


State 214

   70 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 230


State 215

   51 assign_expression: ID $@10 LEFT_PARENTESES argument_list_call $@11 RIGHT_PARENTESES •

    $default  reduce using rule 51 (assign_expression)


State 216

   54 argument_list_call: ID $@12 comma_expression argument_list_call •

    $default  reduce using rule 54 (argument_list_call)


State 217

   31 statement: ID $@5 LEFT_PARENTESES argument_list_call $@6 RIGHT_PARENTESES SEMI •

    $default  reduce using rule 31 (statement)


State 218

   56 argument_list_call: argument_val $@13 comma_expression argument_list_call •

    $default  reduce using rule 56 (argument_list_call)


State 219

   41 array_assign: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression •

    $default  reduce using rule 41 (array_assign)


State 220

   38 array_printable: ID $@8 LEFT_BRACKET id_int_compression RIGHT_BRACKET •

    $default  reduce using rule 38 (array_printable)


State 221

   98 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 231


State 222

   99 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 232


State 223

  100 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 233


State 224

  101 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 234


State 225

   84 for_comparison: ID $@15 • comparadors id_number_compression

    EQUALS      shift, and go to state 97
    LESS_EQUAL  shift, and go to state 98
    MORE_EQUAL  shift, and go to state 99
    LESS        shift, and go to state 100
    MORE        shift, and go to state 101
    DIFERS      shift, and go to state 102
    NOT         shift, and go to state 103

    comparadors  go to state 235


State 226

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI • for_update block

    ID  shift, and go to state 236

    for_update  go to state 237


State 227

   71 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 71 (operator_expression)


State 228

   69 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 69 (operator_expression)


State 229

   68 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 68 (operator_expression)


State 230

   70 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 70 (operator_expression)


State 231

   98 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 98 (scan_args)


State 232

   99 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 99 (scan_args)


State 233

  100 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 100 (scan_args)


State 234

  101 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 101 (scan_args)


State 235

   84 for_comparison: ID $@15 comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 60
    INT_VAL    shift, and go to state 61
    BOOL_VAL   shift, and go to state 70
    ID         shift, and go to state 94

    id_number_compression  go to state 238
    number_val_spec        go to state 67


State 236

   86 for_update: ID • $@16 PLUS_PLUS
   88           | ID • $@17 MINUS_MINUS

    MINUS_MINUS  reduce using rule 87 ($@17)
    $default     reduce using rule 85 ($@16)

    $@16  go to state 239
    $@17  go to state 240


State 237

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update • block

    LEFT_BRACE  shift, and go to state 26

    block  go to state 241


State 238

   84 for_comparison: ID $@15 comparadors id_number_compression •

    $default  reduce using rule 84 (for_comparison)


State 239

   86 for_update: ID $@16 • PLUS_PLUS

    PLUS_PLUS  shift, and go to state 242


State 240

   88 for_update: ID $@17 • MINUS_MINUS

    MINUS_MINUS  shift, and go to state 243


State 241

   82 for_statement: FOR ID $@14 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block •

    $default  reduce using rule 82 (for_statement)


State 242

   86 for_update: ID $@16 PLUS_PLUS •

    $default  reduce using rule 86 (for_update)


State 243

   88 for_update: ID $@17 MINUS_MINUS •

    $default  reduce using rule 88 (for_update)
