Terminals unused in grammar

    AND
    OR


Grammar

    0 $accept: program $end

    1 program: package_declaration import_declaration list_func_generic func_main

    2 package_declaration: PACKAGE MAIN

    3 import_declaration: ε

    4 $@1: ε

    5 import_declaration: IMPORT STRING_VAL $@1 import_declaration

    6 $@2: ε

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block

    8 block: LEFT_BRACE statement_list RIGHT_BRACE

    9 list_func_generic: ε
   10                  | list_func_generic func_generic

   11 $@3: ε

   12 $@4: ε

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

   14 argument_list: ε

   15 $@5: ε

   16 argument_list: ID type_spec $@5 comma_expression argument_list

   17 return_statement: RETURN assign_expression

   18 statement_list: statement
   19               | statement_list statement

   20 statement: if_statement
   21          | for_statement
   22          | assign_val SEMI
   23          | val_declaration SEMI
   24          | array_declaration SEMI
   25          | array_assign SEMI
   26          | print_operation SEMI
   27          | scanf_operation SEMI
   28          | string_list
   29          | return_statement SEMI

   30 $@6: ε

   31 $@7: ε

   32 statement: ID $@6 LEFT_PARENTESES argument_list_call $@7 RIGHT_PARENTESES SEMI

   33 string_list: STRING_VAL
   34            | string_list COMMA STRING_VAL

   35 val_declaration: VAR ID type_spec

   36 $@8: ε

   37 assign_val: ID $@8 ASSIGN assign_expression

   38 $@9: ε

   39 array_printable: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

   41 @10: ε

   42 array_assign: ID @10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

   43 id_int_compression: ID
   44                   | INT_VAL

   45 assign_expression: string_list
   46                  | id_number_compression
   47                  | operator_expression
   48                  | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   49                  | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   50 $@11: ε

   51 $@12: ε

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES

   53 argument_list_call: ε

   54 $@13: ε

   55 argument_list_call: ID $@13 comma_expression argument_list_call

   56 $@14: ε

   57 argument_list_call: argument_val $@14 comma_expression argument_list_call

   58 argument_val: STRING_VAL
   59             | BOOL_VAL
   60             | INT_VAL
   61             | FLOAT_VAL

   62 comma_expression: ε
   63                 | COMMA

   64 operator_expression: id_number_compression operators id_number_compression
   65                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   66                    | id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   67                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression
   68                    | id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

   73 id_number_compression: ID
   74                      | number_val_spec
   75                      | BOOL_VAL

   76 if_statement: IF if_expression block
   77             | IF if_expression block ELSE block

   78 if_expression: ID
   79              | BOOL_VAL
   80              | id_number_compression comparadors id_number_compression
   81              | operator_expression comparadors id_number_compression

   82 $@15: ε

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

   84 $@16: ε

   85 for_comparison: ID $@16 comparadors id_number_compression

   86 $@17: ε

   87 for_update: ID $@17 PLUS_PLUS

   88 $@18: ε

   89 for_update: ID $@18 MINUS_MINUS

   90 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES

   91 print_args: STRING_VAL
   92           | id_number_compression
   93           | array_printable

   94 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES

   95 scan_args: FORMAT_STRING COMMA ADDRESS ID
   96          | FORMAT_INT COMMA ADDRESS ID
   97          | FORMAT_FLOAT COMMA ADDRESS ID
   98          | FORMAT_BOOL COMMA ADDRESS ID
   99          | scan_args COMMA FORMAT_STRING COMMA ADDRESS ID
  100          | scan_args COMMA FORMAT_INT COMMA ADDRESS ID
  101          | scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID
  102          | scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID

  103 type_spec: INT_TYPE
  104          | STRING_TYPE
  105          | FLOAT_TYPE
  106          | BOOL_TYPE
  107          | VOID_TYPE

  108 number_val_spec: INT_VAL
  109                | FLOAT_VAL

  110 comparadors: LESS
  111            | MORE
  112            | LESS_EQUAL
  113            | MORE_EQUAL
  114            | DIFERS
  115            | NOT
  116            | EQUALS

  117 operators: PLUS
  118          | MINUS
  119          | TIMES
  120          | OVER
  121          | REST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FLOAT_TYPE_CAST (258) 49 67 68 69 70 72
    INT_TYPE_CAST (259) 48 65 66 69 70 71
    STRING_VAL (260) 5 33 34 58 91
    ELSE (261) 77
    FOR (262) 83
    FUNC (263) 7 13
    IF (264) 76 77
    PACKAGE (265) 2
    IMPORT (266) 5
    RETURN (267) 17
    VAR (268) 35 40
    INT_TYPE (269) 103
    FLOAT_TYPE (270) 105
    STRING_TYPE (271) 104
    VOID_TYPE (272) 107
    BOOL_TYPE (273) 106
    PLUS_PLUS (274) 87
    PLUS (275) 117
    MINUS_MINUS (276) 89
    MINUS (277) 118
    TIMES (278) 119
    OVER (279) 120
    REST (280) 121
    AND (281)
    OR (282)
    EQUALS (283) 116
    LESS_EQUAL (284) 112
    MORE_EQUAL (285) 113
    LESS (286) 110
    MORE (287) 111
    DIFERS (288) 114
    NOT (289) 115
    LEFT_PARENTESES (290) 7 13 32 52 90 94
    RIGHT_PARENTESES (291) 7 13 32 48 49 52 65 66 67 68 69 70 71 72 90 94
    LEFT_BRACKET (292) 39 40 42
    RIGHT_BRACKET (293) 39 40 42
    LEFT_BRACE (294) 8
    RIGHT_BRACE (295) 8
    FLOAT_VAL (296) 61 109
    INT_VAL (297) 40 44 60 83 108
    BOOL_VAL (298) 59 75 79
    ID (299) 13 16 32 35 37 39 40 42 43 52 55 73 78 83 85 87 89 95 96 97 98 99 100 101 102
    SHORT_ASSIGN (300) 83
    ASSIGN (301) 37 42
    SEMI (302) 22 23 24 25 26 27 29 32 83
    ADDRESS (303) 95 96 97 98 99 100 101 102
    COMMA (304) 34 63 95 96 97 98 99 100 101 102
    MAIN (305) 2 7
    PRINTLN (306) 90
    SCANF (307) 94
    FORMAT_STRING (308) 95 99
    FORMAT_INT (309) 96 100
    FORMAT_FLOAT (310) 97 101
    FORMAT_BOOL (311) 98 102
    IFX (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 1
        on right: 0
    package_declaration (60)
        on left: 2
        on right: 1
    import_declaration (61)
        on left: 3 5
        on right: 1 5
    $@1 (62)
        on left: 4
        on right: 5
    func_main (63)
        on left: 7
        on right: 1
    $@2 (64)
        on left: 6
        on right: 7
    block (65)
        on left: 8
        on right: 7 13 76 77 83
    list_func_generic (66)
        on left: 9 10
        on right: 1 10
    func_generic (67)
        on left: 13
        on right: 10
    $@3 (68)
        on left: 11
        on right: 13
    $@4 (69)
        on left: 12
        on right: 13
    argument_list (70)
        on left: 14 16
        on right: 13 16
    $@5 (71)
        on left: 15
        on right: 16
    return_statement (72)
        on left: 17
        on right: 29
    statement_list (73)
        on left: 18 19
        on right: 8 19
    statement (74)
        on left: 20 21 22 23 24 25 26 27 28 29 32
        on right: 18 19
    $@6 (75)
        on left: 30
        on right: 32
    $@7 (76)
        on left: 31
        on right: 32
    string_list (77)
        on left: 33 34
        on right: 28 34 45
    val_declaration (78)
        on left: 35
        on right: 23
    assign_val (79)
        on left: 37
        on right: 22
    $@8 (80)
        on left: 36
        on right: 37
    array_printable (81)
        on left: 39
        on right: 93
    $@9 (82)
        on left: 38
        on right: 39
    array_declaration (83)
        on left: 40
        on right: 24
    array_assign (84)
        on left: 42
        on right: 25
    @10 (85)
        on left: 41
        on right: 42
    id_int_compression (86)
        on left: 43 44
        on right: 39 42
    assign_expression (87)
        on left: 45 46 47 48 49 52
        on right: 17 37 42
    $@11 (88)
        on left: 50
        on right: 52
    $@12 (89)
        on left: 51
        on right: 52
    argument_list_call (90)
        on left: 53 55 57
        on right: 32 52 55 57
    $@13 (91)
        on left: 54
        on right: 55
    $@14 (92)
        on left: 56
        on right: 57
    argument_val (93)
        on left: 58 59 60 61
        on right: 57
    comma_expression (94)
        on left: 62 63
        on right: 16 55 57
    operator_expression (95)
        on left: 64 65 66 67 68 69 70 71 72
        on right: 47 81
    id_number_compression (96)
        on left: 73 74 75
        on right: 46 48 49 64 65 66 67 68 69 70 71 72 80 81 85 92
    if_statement (97)
        on left: 76 77
        on right: 20
    if_expression (98)
        on left: 78 79 80 81
        on right: 76 77
    for_statement (99)
        on left: 83
        on right: 21
    $@15 (100)
        on left: 82
        on right: 83
    for_comparison (101)
        on left: 85
        on right: 83
    $@16 (102)
        on left: 84
        on right: 85
    for_update (103)
        on left: 87 89
        on right: 83
    $@17 (104)
        on left: 86
        on right: 87
    $@18 (105)
        on left: 88
        on right: 89
    print_operation (106)
        on left: 90
        on right: 26
    print_args (107)
        on left: 91 92 93
        on right: 90
    scanf_operation (108)
        on left: 94
        on right: 27
    scan_args (109)
        on left: 95 96 97 98 99 100 101 102
        on right: 94 99 100 101 102
    type_spec (110)
        on left: 103 104 105 106 107
        on right: 13 16 35 40
    number_val_spec (111)
        on left: 108 109
        on right: 74
    comparadors (112)
        on left: 110 111 112 113 114 115 116
        on right: 80 81 85
    operators (113)
        on left: 117 118 119 120 121
        on right: 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: • program $end

    PACKAGE  shift, and go to state 1

    program              go to state 2
    package_declaration  go to state 3


State 1

    2 package_declaration: PACKAGE • MAIN

    MAIN  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: package_declaration • import_declaration list_func_generic func_main

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 7


State 4

    2 package_declaration: PACKAGE MAIN •

    $default  reduce using rule 2 (package_declaration)


State 5

    0 $accept: program $end •

    $default  accept


State 6

    5 import_declaration: IMPORT • STRING_VAL $@1 import_declaration

    STRING_VAL  shift, and go to state 8


State 7

    1 program: package_declaration import_declaration • list_func_generic func_main

    $default  reduce using rule 9 (list_func_generic)

    list_func_generic  go to state 9


State 8

    5 import_declaration: IMPORT STRING_VAL • $@1 import_declaration

    $default  reduce using rule 4 ($@1)

    $@1  go to state 10


State 9

    1 program: package_declaration import_declaration list_func_generic • func_main
   10 list_func_generic: list_func_generic • func_generic

    FUNC  shift, and go to state 11

    func_main     go to state 12
    func_generic  go to state 13


State 10

    5 import_declaration: IMPORT STRING_VAL $@1 • import_declaration

    IMPORT  shift, and go to state 6

    $default  reduce using rule 3 (import_declaration)

    import_declaration  go to state 14


State 11

    7 func_main: FUNC • MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block
   13 func_generic: FUNC • ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    ID    shift, and go to state 15
    MAIN  shift, and go to state 16


State 12

    1 program: package_declaration import_declaration list_func_generic func_main •

    $default  reduce using rule 1 (program)


State 13

   10 list_func_generic: list_func_generic func_generic •

    $default  reduce using rule 10 (list_func_generic)


State 14

    5 import_declaration: IMPORT STRING_VAL $@1 import_declaration •

    $default  reduce using rule 5 (import_declaration)


State 15

   13 func_generic: FUNC ID • $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    $default  reduce using rule 11 ($@3)

    $@3  go to state 17


State 16

    7 func_main: FUNC MAIN • $@2 LEFT_PARENTESES RIGHT_PARENTESES block

    $default  reduce using rule 6 ($@2)

    $@2  go to state 18


State 17

   13 func_generic: FUNC ID $@3 • LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block

    LEFT_PARENTESES  shift, and go to state 19


State 18

    7 func_main: FUNC MAIN $@2 • LEFT_PARENTESES RIGHT_PARENTESES block

    LEFT_PARENTESES  shift, and go to state 20


State 19

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES • argument_list RIGHT_PARENTESES type_spec $@4 block

    ID  shift, and go to state 21

    $default  reduce using rule 14 (argument_list)

    argument_list  go to state 22


State 20

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES • RIGHT_PARENTESES block

    RIGHT_PARENTESES  shift, and go to state 23


State 21

   16 argument_list: ID • type_spec $@5 comma_expression argument_list

    INT_TYPE     shift, and go to state 24
    FLOAT_TYPE   shift, and go to state 25
    STRING_TYPE  shift, and go to state 26
    VOID_TYPE    shift, and go to state 27
    BOOL_TYPE    shift, and go to state 28

    type_spec  go to state 29


State 22

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list • RIGHT_PARENTESES type_spec $@4 block

    RIGHT_PARENTESES  shift, and go to state 30


State 23

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES • block

    LEFT_BRACE  shift, and go to state 31

    block  go to state 32


State 24

  103 type_spec: INT_TYPE •

    $default  reduce using rule 103 (type_spec)


State 25

  105 type_spec: FLOAT_TYPE •

    $default  reduce using rule 105 (type_spec)


State 26

  104 type_spec: STRING_TYPE •

    $default  reduce using rule 104 (type_spec)


State 27

  107 type_spec: VOID_TYPE •

    $default  reduce using rule 107 (type_spec)


State 28

  106 type_spec: BOOL_TYPE •

    $default  reduce using rule 106 (type_spec)


State 29

   16 argument_list: ID type_spec • $@5 comma_expression argument_list

    $default  reduce using rule 15 ($@5)

    $@5  go to state 33


State 30

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES • type_spec $@4 block

    INT_TYPE     shift, and go to state 24
    FLOAT_TYPE   shift, and go to state 25
    STRING_TYPE  shift, and go to state 26
    VOID_TYPE    shift, and go to state 27
    BOOL_TYPE    shift, and go to state 28

    type_spec  go to state 34


State 31

    8 block: LEFT_BRACE • statement_list RIGHT_BRACE

    STRING_VAL  shift, and go to state 35
    FOR         shift, and go to state 36
    IF          shift, and go to state 37
    RETURN      shift, and go to state 38
    VAR         shift, and go to state 39
    ID          shift, and go to state 40
    PRINTLN     shift, and go to state 41
    SCANF       shift, and go to state 42

    return_statement   go to state 43
    statement_list     go to state 44
    statement          go to state 45
    string_list        go to state 46
    val_declaration    go to state 47
    assign_val         go to state 48
    array_declaration  go to state 49
    array_assign       go to state 50
    if_statement       go to state 51
    for_statement      go to state 52
    print_operation    go to state 53
    scanf_operation    go to state 54


State 32

    7 func_main: FUNC MAIN $@2 LEFT_PARENTESES RIGHT_PARENTESES block •

    $default  reduce using rule 7 (func_main)


State 33

   16 argument_list: ID type_spec $@5 • comma_expression argument_list

    COMMA  shift, and go to state 55

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 56


State 34

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec • $@4 block

    $default  reduce using rule 12 ($@4)

    $@4  go to state 57


State 35

   33 string_list: STRING_VAL •

    $default  reduce using rule 33 (string_list)


State 36

   83 for_statement: FOR • ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    ID  shift, and go to state 58


State 37

   76 if_statement: IF • if_expression block
   77             | IF • if_expression block ELSE block

    FLOAT_TYPE_CAST  shift, and go to state 59
    INT_TYPE_CAST    shift, and go to state 60
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 63
    ID               shift, and go to state 64

    operator_expression    go to state 65
    id_number_compression  go to state 66
    if_expression          go to state 67
    number_val_spec        go to state 68


State 38

   17 return_statement: RETURN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 69
    INT_TYPE_CAST    shift, and go to state 70
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    string_list            go to state 73
    assign_expression      go to state 74
    operator_expression    go to state 75
    id_number_compression  go to state 76
    number_val_spec        go to state 68


State 39

   35 val_declaration: VAR • ID type_spec
   40 array_declaration: VAR • ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

    ID  shift, and go to state 77


State 40

   32 statement: ID • $@6 LEFT_PARENTESES argument_list_call $@7 RIGHT_PARENTESES SEMI
   37 assign_val: ID • $@8 ASSIGN assign_expression
   42 array_assign: ID • @10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  reduce using rule 41 (@10)
    ASSIGN        reduce using rule 36 ($@8)
    $default      reduce using rule 30 ($@6)

    $@6  go to state 78
    $@8  go to state 79
    @10  go to state 80


State 41

   90 print_operation: PRINTLN • LEFT_PARENTESES print_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 81


State 42

   94 scanf_operation: SCANF • LEFT_PARENTESES scan_args RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 82


State 43

   29 statement: return_statement • SEMI

    SEMI  shift, and go to state 83


State 44

    8 block: LEFT_BRACE statement_list • RIGHT_BRACE
   19 statement_list: statement_list • statement

    STRING_VAL   shift, and go to state 35
    FOR          shift, and go to state 36
    IF           shift, and go to state 37
    RETURN       shift, and go to state 38
    VAR          shift, and go to state 39
    RIGHT_BRACE  shift, and go to state 84
    ID           shift, and go to state 40
    PRINTLN      shift, and go to state 41
    SCANF        shift, and go to state 42

    return_statement   go to state 43
    statement          go to state 85
    string_list        go to state 46
    val_declaration    go to state 47
    assign_val         go to state 48
    array_declaration  go to state 49
    array_assign       go to state 50
    if_statement       go to state 51
    for_statement      go to state 52
    print_operation    go to state 53
    scanf_operation    go to state 54


State 45

   18 statement_list: statement •

    $default  reduce using rule 18 (statement_list)


State 46

   28 statement: string_list •
   34 string_list: string_list • COMMA STRING_VAL

    COMMA  shift, and go to state 86

    $default  reduce using rule 28 (statement)


State 47

   23 statement: val_declaration • SEMI

    SEMI  shift, and go to state 87


State 48

   22 statement: assign_val • SEMI

    SEMI  shift, and go to state 88


State 49

   24 statement: array_declaration • SEMI

    SEMI  shift, and go to state 89


State 50

   25 statement: array_assign • SEMI

    SEMI  shift, and go to state 90


State 51

   20 statement: if_statement •

    $default  reduce using rule 20 (statement)


State 52

   21 statement: for_statement •

    $default  reduce using rule 21 (statement)


State 53

   26 statement: print_operation • SEMI

    SEMI  shift, and go to state 91


State 54

   27 statement: scanf_operation • SEMI

    SEMI  shift, and go to state 92


State 55

   63 comma_expression: COMMA •

    $default  reduce using rule 63 (comma_expression)


State 56

   16 argument_list: ID type_spec $@5 comma_expression • argument_list

    ID  shift, and go to state 21

    $default  reduce using rule 14 (argument_list)

    argument_list  go to state 93


State 57

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 • block

    LEFT_BRACE  shift, and go to state 31

    block  go to state 94


State 58

   83 for_statement: FOR ID • $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    $default  reduce using rule 82 ($@15)

    $@15  go to state 95


State 59

   67 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 97
    number_val_spec        go to state 68


State 60

   65 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 98
    number_val_spec        go to state 68


State 61

  109 number_val_spec: FLOAT_VAL •

    $default  reduce using rule 109 (number_val_spec)


State 62

  108 number_val_spec: INT_VAL •

    $default  reduce using rule 108 (number_val_spec)


State 63

   75 id_number_compression: BOOL_VAL •
   79 if_expression: BOOL_VAL •

    LEFT_BRACE  reduce using rule 79 (if_expression)
    $default    reduce using rule 75 (id_number_compression)


State 64

   73 id_number_compression: ID •
   78 if_expression: ID •

    LEFT_BRACE  reduce using rule 78 (if_expression)
    $default    reduce using rule 73 (id_number_compression)


State 65

   81 if_expression: operator_expression • comparadors id_number_compression

    EQUALS      shift, and go to state 99
    LESS_EQUAL  shift, and go to state 100
    MORE_EQUAL  shift, and go to state 101
    LESS        shift, and go to state 102
    MORE        shift, and go to state 103
    DIFERS      shift, and go to state 104
    NOT         shift, and go to state 105

    comparadors  go to state 106


State 66

   64 operator_expression: id_number_compression • operators id_number_compression
   66                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   80 if_expression: id_number_compression • comparadors id_number_compression

    PLUS        shift, and go to state 107
    MINUS       shift, and go to state 108
    TIMES       shift, and go to state 109
    OVER        shift, and go to state 110
    REST        shift, and go to state 111
    EQUALS      shift, and go to state 99
    LESS_EQUAL  shift, and go to state 100
    MORE_EQUAL  shift, and go to state 101
    LESS        shift, and go to state 102
    MORE        shift, and go to state 103
    DIFERS      shift, and go to state 104
    NOT         shift, and go to state 105

    comparadors  go to state 112
    operators    go to state 113


State 67

   76 if_statement: IF if_expression • block
   77             | IF if_expression • block ELSE block

    LEFT_BRACE  shift, and go to state 31

    block  go to state 114


State 68

   74 id_number_compression: number_val_spec •

    $default  reduce using rule 74 (id_number_compression)


State 69

   49 assign_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   67 operator_expression: FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 115
    number_val_spec        go to state 68


State 70

   48 assign_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES
   65 operator_expression: INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 116
    number_val_spec        go to state 68


State 71

   75 id_number_compression: BOOL_VAL •

    $default  reduce using rule 75 (id_number_compression)


State 72

   52 assign_expression: ID • $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES
   73 id_number_compression: ID •

    LEFT_PARENTESES  reduce using rule 50 ($@11)
    $default         reduce using rule 73 (id_number_compression)

    $@11  go to state 117


State 73

   34 string_list: string_list • COMMA STRING_VAL
   45 assign_expression: string_list •

    COMMA  shift, and go to state 86

    $default  reduce using rule 45 (assign_expression)


State 74

   17 return_statement: RETURN assign_expression •

    $default  reduce using rule 17 (return_statement)


State 75

   47 assign_expression: operator_expression •

    $default  reduce using rule 47 (assign_expression)


State 76

   46 assign_expression: id_number_compression •
   64 operator_expression: id_number_compression • operators id_number_compression
   66                    | id_number_compression • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108
    TIMES  shift, and go to state 109
    OVER   shift, and go to state 110
    REST   shift, and go to state 111

    $default  reduce using rule 46 (assign_expression)

    operators  go to state 113


State 77

   35 val_declaration: VAR ID • type_spec
   40 array_declaration: VAR ID • LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec

    INT_TYPE      shift, and go to state 24
    FLOAT_TYPE    shift, and go to state 25
    STRING_TYPE   shift, and go to state 26
    VOID_TYPE     shift, and go to state 27
    BOOL_TYPE     shift, and go to state 28
    LEFT_BRACKET  shift, and go to state 118

    type_spec  go to state 119


State 78

   32 statement: ID $@6 • LEFT_PARENTESES argument_list_call $@7 RIGHT_PARENTESES SEMI

    LEFT_PARENTESES  shift, and go to state 120


State 79

   37 assign_val: ID $@8 • ASSIGN assign_expression

    ASSIGN  shift, and go to state 121


State 80

   42 array_assign: ID @10 • LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    LEFT_BRACKET  shift, and go to state 122


State 81

   90 print_operation: PRINTLN LEFT_PARENTESES • print_args RIGHT_PARENTESES

    STRING_VAL  shift, and go to state 123
    FLOAT_VAL   shift, and go to state 61
    INT_VAL     shift, and go to state 62
    BOOL_VAL    shift, and go to state 71
    ID          shift, and go to state 124

    array_printable        go to state 125
    id_number_compression  go to state 126
    print_args             go to state 127
    number_val_spec        go to state 68


State 82

   94 scanf_operation: SCANF LEFT_PARENTESES • scan_args RIGHT_PARENTESES

    FORMAT_STRING  shift, and go to state 128
    FORMAT_INT     shift, and go to state 129
    FORMAT_FLOAT   shift, and go to state 130
    FORMAT_BOOL    shift, and go to state 131

    scan_args  go to state 132


State 83

   29 statement: return_statement SEMI •

    $default  reduce using rule 29 (statement)


State 84

    8 block: LEFT_BRACE statement_list RIGHT_BRACE •

    $default  reduce using rule 8 (block)


State 85

   19 statement_list: statement_list statement •

    $default  reduce using rule 19 (statement_list)


State 86

   34 string_list: string_list COMMA • STRING_VAL

    STRING_VAL  shift, and go to state 133


State 87

   23 statement: val_declaration SEMI •

    $default  reduce using rule 23 (statement)


State 88

   22 statement: assign_val SEMI •

    $default  reduce using rule 22 (statement)


State 89

   24 statement: array_declaration SEMI •

    $default  reduce using rule 24 (statement)


State 90

   25 statement: array_assign SEMI •

    $default  reduce using rule 25 (statement)


State 91

   26 statement: print_operation SEMI •

    $default  reduce using rule 26 (statement)


State 92

   27 statement: scanf_operation SEMI •

    $default  reduce using rule 27 (statement)


State 93

   16 argument_list: ID type_spec $@5 comma_expression argument_list •

    $default  reduce using rule 16 (argument_list)


State 94

   13 func_generic: FUNC ID $@3 LEFT_PARENTESES argument_list RIGHT_PARENTESES type_spec $@4 block •

    $default  reduce using rule 13 (func_generic)


State 95

   83 for_statement: FOR ID $@15 • SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block

    SHORT_ASSIGN  shift, and go to state 134


State 96

   73 id_number_compression: ID •

    $default  reduce using rule 73 (id_number_compression)


State 97

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 135


State 98

   65 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 136


State 99

  116 comparadors: EQUALS •

    $default  reduce using rule 116 (comparadors)


State 100

  112 comparadors: LESS_EQUAL •

    $default  reduce using rule 112 (comparadors)


State 101

  113 comparadors: MORE_EQUAL •

    $default  reduce using rule 113 (comparadors)


State 102

  110 comparadors: LESS •

    $default  reduce using rule 110 (comparadors)


State 103

  111 comparadors: MORE •

    $default  reduce using rule 111 (comparadors)


State 104

  114 comparadors: DIFERS •

    $default  reduce using rule 114 (comparadors)


State 105

  115 comparadors: NOT •

    $default  reduce using rule 115 (comparadors)


State 106

   81 if_expression: operator_expression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 137
    number_val_spec        go to state 68


State 107

  117 operators: PLUS •

    $default  reduce using rule 117 (operators)


State 108

  118 operators: MINUS •

    $default  reduce using rule 118 (operators)


State 109

  119 operators: TIMES •

    $default  reduce using rule 119 (operators)


State 110

  120 operators: OVER •

    $default  reduce using rule 120 (operators)


State 111

  121 operators: REST •

    $default  reduce using rule 121 (operators)


State 112

   80 if_expression: id_number_compression comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 138
    number_val_spec        go to state 68


State 113

   64 operator_expression: id_number_compression operators • id_number_compression
   66                    | id_number_compression operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   68                    | id_number_compression operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 139
    INT_TYPE_CAST    shift, and go to state 140
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 96

    id_number_compression  go to state 141
    number_val_spec        go to state 68


State 114

   76 if_statement: IF if_expression block •
   77             | IF if_expression block • ELSE block

    ELSE  shift, and go to state 142

    $default  reduce using rule 76 (if_statement)


State 115

   49 assign_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   67 operator_expression: FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 143


State 116

   48 assign_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES
   65 operator_expression: INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 144


State 117

   52 assign_expression: ID $@11 • LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES

    LEFT_PARENTESES  shift, and go to state 145


State 118

   40 array_declaration: VAR ID LEFT_BRACKET • INT_VAL RIGHT_BRACKET type_spec

    INT_VAL  shift, and go to state 146


State 119

   35 val_declaration: VAR ID type_spec •

    $default  reduce using rule 35 (val_declaration)


State 120

   32 statement: ID $@6 LEFT_PARENTESES • argument_list_call $@7 RIGHT_PARENTESES SEMI

    STRING_VAL  shift, and go to state 147
    FLOAT_VAL   shift, and go to state 148
    INT_VAL     shift, and go to state 149
    BOOL_VAL    shift, and go to state 150
    ID          shift, and go to state 151

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 152
    argument_val        go to state 153


State 121

   37 assign_val: ID $@8 ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 69
    INT_TYPE_CAST    shift, and go to state 70
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    string_list            go to state 73
    assign_expression      go to state 154
    operator_expression    go to state 75
    id_number_compression  go to state 76
    number_val_spec        go to state 68


State 122

   42 array_assign: ID @10 LEFT_BRACKET • id_int_compression RIGHT_BRACKET ASSIGN assign_expression

    INT_VAL  shift, and go to state 155
    ID       shift, and go to state 156

    id_int_compression  go to state 157


State 123

   91 print_args: STRING_VAL •

    $default  reduce using rule 91 (print_args)


State 124

   39 array_printable: ID • $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET
   73 id_number_compression: ID •

    RIGHT_PARENTESES  reduce using rule 73 (id_number_compression)
    $default          reduce using rule 38 ($@9)

    $@9  go to state 158


State 125

   93 print_args: array_printable •

    $default  reduce using rule 93 (print_args)


State 126

   92 print_args: id_number_compression •

    $default  reduce using rule 92 (print_args)


State 127

   90 print_operation: PRINTLN LEFT_PARENTESES print_args • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 159


State 128

   95 scan_args: FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 160


State 129

   96 scan_args: FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 161


State 130

   97 scan_args: FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 162


State 131

   98 scan_args: FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 163


State 132

   94 scanf_operation: SCANF LEFT_PARENTESES scan_args • RIGHT_PARENTESES
   99 scan_args: scan_args • COMMA FORMAT_STRING COMMA ADDRESS ID
  100          | scan_args • COMMA FORMAT_INT COMMA ADDRESS ID
  101          | scan_args • COMMA FORMAT_FLOAT COMMA ADDRESS ID
  102          | scan_args • COMMA FORMAT_BOOL COMMA ADDRESS ID

    RIGHT_PARENTESES  shift, and go to state 164
    COMMA             shift, and go to state 165


State 133

   34 string_list: string_list COMMA STRING_VAL •

    $default  reduce using rule 34 (string_list)


State 134

   83 for_statement: FOR ID $@15 SHORT_ASSIGN • INT_VAL SEMI for_comparison SEMI for_update block

    INT_VAL  shift, and go to state 166


State 135

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108
    TIMES  shift, and go to state 109
    OVER   shift, and go to state 110
    REST   shift, and go to state 111

    operators  go to state 167


State 136

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108
    TIMES  shift, and go to state 109
    OVER   shift, and go to state 110
    REST   shift, and go to state 111

    operators  go to state 168


State 137

   81 if_expression: operator_expression comparadors id_number_compression •

    $default  reduce using rule 81 (if_expression)


State 138

   80 if_expression: id_number_compression comparadors id_number_compression •

    $default  reduce using rule 80 (if_expression)


State 139

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 169
    number_val_spec        go to state 68


State 140

   66 operator_expression: id_number_compression operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 170
    number_val_spec        go to state 68


State 141

   64 operator_expression: id_number_compression operators id_number_compression •

    $default  reduce using rule 64 (operator_expression)


State 142

   77 if_statement: IF if_expression block ELSE • block

    LEFT_BRACE  shift, and go to state 31

    block  go to state 171


State 143

   49 assign_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108
    TIMES  shift, and go to state 109
    OVER   shift, and go to state 110
    REST   shift, and go to state 111

    $default  reduce using rule 49 (assign_expression)

    operators  go to state 167


State 144

   48 assign_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •
   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES • operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    PLUS   shift, and go to state 107
    MINUS  shift, and go to state 108
    TIMES  shift, and go to state 109
    OVER   shift, and go to state 110
    REST   shift, and go to state 111

    $default  reduce using rule 48 (assign_expression)

    operators  go to state 168


State 145

   52 assign_expression: ID $@11 LEFT_PARENTESES • argument_list_call $@12 RIGHT_PARENTESES

    STRING_VAL  shift, and go to state 147
    FLOAT_VAL   shift, and go to state 148
    INT_VAL     shift, and go to state 149
    BOOL_VAL    shift, and go to state 150
    ID          shift, and go to state 151

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 172
    argument_val        go to state 153


State 146

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL • RIGHT_BRACKET type_spec

    RIGHT_BRACKET  shift, and go to state 173


State 147

   58 argument_val: STRING_VAL •

    $default  reduce using rule 58 (argument_val)


State 148

   61 argument_val: FLOAT_VAL •

    $default  reduce using rule 61 (argument_val)


State 149

   60 argument_val: INT_VAL •

    $default  reduce using rule 60 (argument_val)


State 150

   59 argument_val: BOOL_VAL •

    $default  reduce using rule 59 (argument_val)


State 151

   55 argument_list_call: ID • $@13 comma_expression argument_list_call

    $default  reduce using rule 54 ($@13)

    $@13  go to state 174


State 152

   32 statement: ID $@6 LEFT_PARENTESES argument_list_call • $@7 RIGHT_PARENTESES SEMI

    $default  reduce using rule 31 ($@7)

    $@7  go to state 175


State 153

   57 argument_list_call: argument_val • $@14 comma_expression argument_list_call

    $default  reduce using rule 56 ($@14)

    $@14  go to state 176


State 154

   37 assign_val: ID $@8 ASSIGN assign_expression •

    $default  reduce using rule 37 (assign_val)


State 155

   44 id_int_compression: INT_VAL •

    $default  reduce using rule 44 (id_int_compression)


State 156

   43 id_int_compression: ID •

    $default  reduce using rule 43 (id_int_compression)


State 157

   42 array_assign: ID @10 LEFT_BRACKET id_int_compression • RIGHT_BRACKET ASSIGN assign_expression

    RIGHT_BRACKET  shift, and go to state 177


State 158

   39 array_printable: ID $@9 • LEFT_BRACKET id_int_compression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 178


State 159

   90 print_operation: PRINTLN LEFT_PARENTESES print_args RIGHT_PARENTESES •

    $default  reduce using rule 90 (print_operation)


State 160

   95 scan_args: FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 179


State 161

   96 scan_args: FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 180


State 162

   97 scan_args: FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 181


State 163

   98 scan_args: FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 182


State 164

   94 scanf_operation: SCANF LEFT_PARENTESES scan_args RIGHT_PARENTESES •

    $default  reduce using rule 94 (scanf_operation)


State 165

   99 scan_args: scan_args COMMA • FORMAT_STRING COMMA ADDRESS ID
  100          | scan_args COMMA • FORMAT_INT COMMA ADDRESS ID
  101          | scan_args COMMA • FORMAT_FLOAT COMMA ADDRESS ID
  102          | scan_args COMMA • FORMAT_BOOL COMMA ADDRESS ID

    FORMAT_STRING  shift, and go to state 183
    FORMAT_INT     shift, and go to state 184
    FORMAT_FLOAT   shift, and go to state 185
    FORMAT_BOOL    shift, and go to state 186


State 166

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL • SEMI for_comparison SEMI for_update block

    SEMI  shift, and go to state 187


State 167

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   70                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   72                    | FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 188
    INT_TYPE_CAST    shift, and go to state 189
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 96

    id_number_compression  go to state 190
    number_val_spec        go to state 68


State 168

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • id_number_compression
   69                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES
   71                    | INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators • INT_TYPE_CAST id_number_compression RIGHT_PARENTESES

    FLOAT_TYPE_CAST  shift, and go to state 191
    INT_TYPE_CAST    shift, and go to state 192
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 96

    id_number_compression  go to state 193
    number_val_spec        go to state 68


State 169

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 194


State 170

   66 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 195


State 171

   77 if_statement: IF if_expression block ELSE block •

    $default  reduce using rule 77 (if_statement)


State 172

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call • $@12 RIGHT_PARENTESES

    $default  reduce using rule 51 ($@12)

    $@12  go to state 196


State 173

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET • type_spec

    INT_TYPE     shift, and go to state 24
    FLOAT_TYPE   shift, and go to state 25
    STRING_TYPE  shift, and go to state 26
    VOID_TYPE    shift, and go to state 27
    BOOL_TYPE    shift, and go to state 28

    type_spec  go to state 197


State 174

   55 argument_list_call: ID $@13 • comma_expression argument_list_call

    COMMA  shift, and go to state 55

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 198


State 175

   32 statement: ID $@6 LEFT_PARENTESES argument_list_call $@7 • RIGHT_PARENTESES SEMI

    RIGHT_PARENTESES  shift, and go to state 199


State 176

   57 argument_list_call: argument_val $@14 • comma_expression argument_list_call

    COMMA  shift, and go to state 55

    $default  reduce using rule 62 (comma_expression)

    comma_expression  go to state 200


State 177

   42 array_assign: ID @10 LEFT_BRACKET id_int_compression RIGHT_BRACKET • ASSIGN assign_expression

    ASSIGN  shift, and go to state 201


State 178

   39 array_printable: ID $@9 LEFT_BRACKET • id_int_compression RIGHT_BRACKET

    INT_VAL  shift, and go to state 155
    ID       shift, and go to state 156

    id_int_compression  go to state 202


State 179

   95 scan_args: FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 203


State 180

   96 scan_args: FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 204


State 181

   97 scan_args: FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 205


State 182

   98 scan_args: FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 206


State 183

   99 scan_args: scan_args COMMA FORMAT_STRING • COMMA ADDRESS ID

    COMMA  shift, and go to state 207


State 184

  100 scan_args: scan_args COMMA FORMAT_INT • COMMA ADDRESS ID

    COMMA  shift, and go to state 208


State 185

  101 scan_args: scan_args COMMA FORMAT_FLOAT • COMMA ADDRESS ID

    COMMA  shift, and go to state 209


State 186

  102 scan_args: scan_args COMMA FORMAT_BOOL • COMMA ADDRESS ID

    COMMA  shift, and go to state 210


State 187

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI • for_comparison SEMI for_update block

    ID  shift, and go to state 211

    for_comparison  go to state 212


State 188

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 213
    number_val_spec        go to state 68


State 189

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 214
    number_val_spec        go to state 68


State 190

   67 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 67 (operator_expression)


State 191

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 215
    number_val_spec        go to state 68


State 192

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST • id_number_compression RIGHT_PARENTESES

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 216
    number_val_spec        go to state 68


State 193

   65 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators id_number_compression •

    $default  reduce using rule 65 (operator_expression)


State 194

   68 operator_expression: id_number_compression operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 68 (operator_expression)


State 195

   66 operator_expression: id_number_compression operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 66 (operator_expression)


State 196

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 217


State 197

   40 array_declaration: VAR ID LEFT_BRACKET INT_VAL RIGHT_BRACKET type_spec •

    $default  reduce using rule 40 (array_declaration)


State 198

   55 argument_list_call: ID $@13 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 147
    FLOAT_VAL   shift, and go to state 148
    INT_VAL     shift, and go to state 149
    BOOL_VAL    shift, and go to state 150
    ID          shift, and go to state 151

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 218
    argument_val        go to state 153


State 199

   32 statement: ID $@6 LEFT_PARENTESES argument_list_call $@7 RIGHT_PARENTESES • SEMI

    SEMI  shift, and go to state 219


State 200

   57 argument_list_call: argument_val $@14 comma_expression • argument_list_call

    STRING_VAL  shift, and go to state 147
    FLOAT_VAL   shift, and go to state 148
    INT_VAL     shift, and go to state 149
    BOOL_VAL    shift, and go to state 150
    ID          shift, and go to state 151

    $default  reduce using rule 53 (argument_list_call)

    argument_list_call  go to state 220
    argument_val        go to state 153


State 201

   42 array_assign: ID @10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN • assign_expression

    FLOAT_TYPE_CAST  shift, and go to state 69
    INT_TYPE_CAST    shift, and go to state 70
    STRING_VAL       shift, and go to state 35
    FLOAT_VAL        shift, and go to state 61
    INT_VAL          shift, and go to state 62
    BOOL_VAL         shift, and go to state 71
    ID               shift, and go to state 72

    string_list            go to state 73
    assign_expression      go to state 221
    operator_expression    go to state 75
    id_number_compression  go to state 76
    number_val_spec        go to state 68


State 202

   39 array_printable: ID $@9 LEFT_BRACKET id_int_compression • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 222


State 203

   95 scan_args: FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 95 (scan_args)


State 204

   96 scan_args: FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 96 (scan_args)


State 205

   97 scan_args: FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 97 (scan_args)


State 206

   98 scan_args: FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 98 (scan_args)


State 207

   99 scan_args: scan_args COMMA FORMAT_STRING COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 223


State 208

  100 scan_args: scan_args COMMA FORMAT_INT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 224


State 209

  101 scan_args: scan_args COMMA FORMAT_FLOAT COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 225


State 210

  102 scan_args: scan_args COMMA FORMAT_BOOL COMMA • ADDRESS ID

    ADDRESS  shift, and go to state 226


State 211

   85 for_comparison: ID • $@16 comparadors id_number_compression

    $default  reduce using rule 84 ($@16)

    $@16  go to state 227


State 212

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison • SEMI for_update block

    SEMI  shift, and go to state 228


State 213

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 229


State 214

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 230


State 215

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 231


State 216

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression • RIGHT_PARENTESES

    RIGHT_PARENTESES  shift, and go to state 232


State 217

   52 assign_expression: ID $@11 LEFT_PARENTESES argument_list_call $@12 RIGHT_PARENTESES •

    $default  reduce using rule 52 (assign_expression)


State 218

   55 argument_list_call: ID $@13 comma_expression argument_list_call •

    $default  reduce using rule 55 (argument_list_call)


State 219

   32 statement: ID $@6 LEFT_PARENTESES argument_list_call $@7 RIGHT_PARENTESES SEMI •

    $default  reduce using rule 32 (statement)


State 220

   57 argument_list_call: argument_val $@14 comma_expression argument_list_call •

    $default  reduce using rule 57 (argument_list_call)


State 221

   42 array_assign: ID @10 LEFT_BRACKET id_int_compression RIGHT_BRACKET ASSIGN assign_expression •

    $default  reduce using rule 42 (array_assign)


State 222

   39 array_printable: ID $@9 LEFT_BRACKET id_int_compression RIGHT_BRACKET •

    $default  reduce using rule 39 (array_printable)


State 223

   99 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS • ID

    ID  shift, and go to state 233


State 224

  100 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS • ID

    ID  shift, and go to state 234


State 225

  101 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS • ID

    ID  shift, and go to state 235


State 226

  102 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS • ID

    ID  shift, and go to state 236


State 227

   85 for_comparison: ID $@16 • comparadors id_number_compression

    EQUALS      shift, and go to state 99
    LESS_EQUAL  shift, and go to state 100
    MORE_EQUAL  shift, and go to state 101
    LESS        shift, and go to state 102
    MORE        shift, and go to state 103
    DIFERS      shift, and go to state 104
    NOT         shift, and go to state 105

    comparadors  go to state 237


State 228

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI • for_update block

    ID  shift, and go to state 238

    for_update  go to state 239


State 229

   72 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 72 (operator_expression)


State 230

   70 operator_expression: FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 70 (operator_expression)


State 231

   69 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators FLOAT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 69 (operator_expression)


State 232

   71 operator_expression: INT_TYPE_CAST id_number_compression RIGHT_PARENTESES operators INT_TYPE_CAST id_number_compression RIGHT_PARENTESES •

    $default  reduce using rule 71 (operator_expression)


State 233

   99 scan_args: scan_args COMMA FORMAT_STRING COMMA ADDRESS ID •

    $default  reduce using rule 99 (scan_args)


State 234

  100 scan_args: scan_args COMMA FORMAT_INT COMMA ADDRESS ID •

    $default  reduce using rule 100 (scan_args)


State 235

  101 scan_args: scan_args COMMA FORMAT_FLOAT COMMA ADDRESS ID •

    $default  reduce using rule 101 (scan_args)


State 236

  102 scan_args: scan_args COMMA FORMAT_BOOL COMMA ADDRESS ID •

    $default  reduce using rule 102 (scan_args)


State 237

   85 for_comparison: ID $@16 comparadors • id_number_compression

    FLOAT_VAL  shift, and go to state 61
    INT_VAL    shift, and go to state 62
    BOOL_VAL   shift, and go to state 71
    ID         shift, and go to state 96

    id_number_compression  go to state 240
    number_val_spec        go to state 68


State 238

   87 for_update: ID • $@17 PLUS_PLUS
   89           | ID • $@18 MINUS_MINUS

    MINUS_MINUS  reduce using rule 88 ($@18)
    $default     reduce using rule 86 ($@17)

    $@17  go to state 241
    $@18  go to state 242


State 239

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update • block

    LEFT_BRACE  shift, and go to state 31

    block  go to state 243


State 240

   85 for_comparison: ID $@16 comparadors id_number_compression •

    $default  reduce using rule 85 (for_comparison)


State 241

   87 for_update: ID $@17 • PLUS_PLUS

    PLUS_PLUS  shift, and go to state 244


State 242

   89 for_update: ID $@18 • MINUS_MINUS

    MINUS_MINUS  shift, and go to state 245


State 243

   83 for_statement: FOR ID $@15 SHORT_ASSIGN INT_VAL SEMI for_comparison SEMI for_update block •

    $default  reduce using rule 83 (for_statement)


State 244

   87 for_update: ID $@17 PLUS_PLUS •

    $default  reduce using rule 87 (for_update)


State 245

   89 for_update: ID $@18 MINUS_MINUS •

    $default  reduce using rule 89 (for_update)
